//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("LightSwitchApplication", "APP_TP_APPLICATION", "APP", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(LightSwitchApplication.Implementation.APP), "TP_APPLICATION", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LightSwitchApplication.Implementation.TP_APPLICATION), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "FK_TP_REF_APPLICATION_TYPE", "REF_APPLICATION_TYPE", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(LightSwitchApplication.Implementation.REF_APPLICATION_TYPE), "TP", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LightSwitchApplication.Implementation.TP), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "FK_TP_REF_COMPLEXITY", "REF_COMPLEXITY", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(LightSwitchApplication.Implementation.REF_COMPLEXITY), "TP", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LightSwitchApplication.Implementation.TP), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "FK_TP_REF_COMPLEXITY1", "REF_COMPLEXITY", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(LightSwitchApplication.Implementation.REF_COMPLEXITY), "TP", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LightSwitchApplication.Implementation.TP), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "FK_TP_DOCUMENT_LINK_REF_DOCUMENT_TYPE", "REF_DOCUMENT_TYPE", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(LightSwitchApplication.Implementation.REF_DOCUMENT_TYPE), "TP_DOCUMENT_LINK", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LightSwitchApplication.Implementation.TP_DOCUMENT_LINK), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "FK_TP_REF_GAP", "REF_GAP", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(LightSwitchApplication.Implementation.REF_GAP), "TP", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LightSwitchApplication.Implementation.TP), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "FK_TP_REF_GAP1", "REF_GAP", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(LightSwitchApplication.Implementation.REF_GAP), "TP", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LightSwitchApplication.Implementation.TP), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "FK_TP_PHASE_TP_PHASE", "REF_PHASE", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(LightSwitchApplication.Implementation.REF_PHASE), "TP_PHASE", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LightSwitchApplication.Implementation.TP_PHASE), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "FK_RESOURCE_REF_ROLE", "REF_ROLE", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(LightSwitchApplication.Implementation.REF_ROLE), "RESOURCE", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LightSwitchApplication.Implementation.RESOURCE), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "FK_TP_STAKEHOLDER_REF_STAKEHOLDER", "REF_STAKEHOLDER", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(LightSwitchApplication.Implementation.REF_STAKEHOLDER), "TP_STAKEHOLDER", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LightSwitchApplication.Implementation.TP_STAKEHOLDER), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "FK_RESOURCE_REF_STATUS", "REF_STATUS", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(LightSwitchApplication.Implementation.REF_STATUS), "RESOURCE", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LightSwitchApplication.Implementation.RESOURCE), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "REF_TECHNOLOGY_APP", "REF_TECHNOLOGY", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(LightSwitchApplication.Implementation.REF_TECHNOLOGY), "APP", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LightSwitchApplication.Implementation.APP), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "FK_TP_REF_TECHNOLOGY_STACK", "REF_TECHNOLOGY_STACK", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(LightSwitchApplication.Implementation.REF_TECHNOLOGY_STACK), "TP", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LightSwitchApplication.Implementation.TP), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "FK_TP_VENDOR_REF_VENDOR", "REF_VENDOR", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(LightSwitchApplication.Implementation.REF_VENDOR), "TP_VENDOR", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LightSwitchApplication.Implementation.TP_VENDOR), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "FK_TP_RESOURCE_ALLOCATION_RESOURCE", "RESOURCE", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(LightSwitchApplication.Implementation.RESOURCE), "TP_RESOURCE_ALLOCATION", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LightSwitchApplication.Implementation.TP_RESOURCE_ALLOCATION), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "FK_TP_APPLICATION_TP_APPLICATION", "TP", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(LightSwitchApplication.Implementation.TP), "TP_APPLICATION", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LightSwitchApplication.Implementation.TP_APPLICATION), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "FK_TP_DOCUMENT_LINK_TP", "TP", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(LightSwitchApplication.Implementation.TP), "TP_DOCUMENT_LINK", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LightSwitchApplication.Implementation.TP_DOCUMENT_LINK), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "FK_TP_PHASE_TP", "TP", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(LightSwitchApplication.Implementation.TP), "TP_PHASE", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LightSwitchApplication.Implementation.TP_PHASE), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "FK_TP_RESOURCE_TP", "TP", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(LightSwitchApplication.Implementation.TP), "TP_RESOURCE_ALLOCATION", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LightSwitchApplication.Implementation.TP_RESOURCE_ALLOCATION), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "FK_TP_STAKEHOLDER_TP", "TP", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(LightSwitchApplication.Implementation.TP), "TP_STAKEHOLDER", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LightSwitchApplication.Implementation.TP_STAKEHOLDER), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "FK_TP_VENDOR_TP", "TP", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(LightSwitchApplication.Implementation.TP), "TP_VENDOR", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LightSwitchApplication.Implementation.TP_VENDOR), true)]

#endregion

namespace LightSwitchApplication.Implementation
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class FMData : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new FMData object using the connection string found in the 'FMData' section of the application configuration file.
        /// </summary>
        public FMData() : base("name=FMData", "FMData")
        {
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new FMData object.
        /// </summary>
        public FMData(string connectionString) : base(connectionString, "FMData")
        {
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new FMData object.
        /// </summary>
        public FMData(EntityConnection connection) : base(connection, "FMData")
        {
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<APP> APPLICATIONs
        {
            get
            {
                if ((_APPLICATIONs == null))
                {
                    _APPLICATIONs = base.CreateObjectSet<APP>("APPLICATIONs");
                }
                return _APPLICATIONs;
            }
        }
        private ObjectSet<APP> _APPLICATIONs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<REF_APPLICATION_TYPE> REF_APPLICATION_TYPEs
        {
            get
            {
                if ((_REF_APPLICATION_TYPEs == null))
                {
                    _REF_APPLICATION_TYPEs = base.CreateObjectSet<REF_APPLICATION_TYPE>("REF_APPLICATION_TYPEs");
                }
                return _REF_APPLICATION_TYPEs;
            }
        }
        private ObjectSet<REF_APPLICATION_TYPE> _REF_APPLICATION_TYPEs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<REF_COMPLEXITY> REF_COMPLEXITies
        {
            get
            {
                if ((_REF_COMPLEXITies == null))
                {
                    _REF_COMPLEXITies = base.CreateObjectSet<REF_COMPLEXITY>("REF_COMPLEXITies");
                }
                return _REF_COMPLEXITies;
            }
        }
        private ObjectSet<REF_COMPLEXITY> _REF_COMPLEXITies;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<REF_DOCUMENT_TYPE> REF_DOCUMENT_TYPEs
        {
            get
            {
                if ((_REF_DOCUMENT_TYPEs == null))
                {
                    _REF_DOCUMENT_TYPEs = base.CreateObjectSet<REF_DOCUMENT_TYPE>("REF_DOCUMENT_TYPEs");
                }
                return _REF_DOCUMENT_TYPEs;
            }
        }
        private ObjectSet<REF_DOCUMENT_TYPE> _REF_DOCUMENT_TYPEs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<REF_GAP> REF_GAPs
        {
            get
            {
                if ((_REF_GAPs == null))
                {
                    _REF_GAPs = base.CreateObjectSet<REF_GAP>("REF_GAPs");
                }
                return _REF_GAPs;
            }
        }
        private ObjectSet<REF_GAP> _REF_GAPs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<REF_PHASE> REF_PHASEs
        {
            get
            {
                if ((_REF_PHASEs == null))
                {
                    _REF_PHASEs = base.CreateObjectSet<REF_PHASE>("REF_PHASEs");
                }
                return _REF_PHASEs;
            }
        }
        private ObjectSet<REF_PHASE> _REF_PHASEs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<REF_ROLE> REF_ROLEs
        {
            get
            {
                if ((_REF_ROLEs == null))
                {
                    _REF_ROLEs = base.CreateObjectSet<REF_ROLE>("REF_ROLEs");
                }
                return _REF_ROLEs;
            }
        }
        private ObjectSet<REF_ROLE> _REF_ROLEs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<REF_STAKEHOLDER> REF_STAKEHOLDERs
        {
            get
            {
                if ((_REF_STAKEHOLDERs == null))
                {
                    _REF_STAKEHOLDERs = base.CreateObjectSet<REF_STAKEHOLDER>("REF_STAKEHOLDERs");
                }
                return _REF_STAKEHOLDERs;
            }
        }
        private ObjectSet<REF_STAKEHOLDER> _REF_STAKEHOLDERs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<REF_STATUS> REF_STATUS
        {
            get
            {
                if ((_REF_STATUS == null))
                {
                    _REF_STATUS = base.CreateObjectSet<REF_STATUS>("REF_STATUS");
                }
                return _REF_STATUS;
            }
        }
        private ObjectSet<REF_STATUS> _REF_STATUS;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<REF_TECHNOLOGY> REF_TECHNOLOGies
        {
            get
            {
                if ((_REF_TECHNOLOGies == null))
                {
                    _REF_TECHNOLOGies = base.CreateObjectSet<REF_TECHNOLOGY>("REF_TECHNOLOGies");
                }
                return _REF_TECHNOLOGies;
            }
        }
        private ObjectSet<REF_TECHNOLOGY> _REF_TECHNOLOGies;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<REF_TECHNOLOGY_STACK> REF_TECHNOLOGY_STACKs
        {
            get
            {
                if ((_REF_TECHNOLOGY_STACKs == null))
                {
                    _REF_TECHNOLOGY_STACKs = base.CreateObjectSet<REF_TECHNOLOGY_STACK>("REF_TECHNOLOGY_STACKs");
                }
                return _REF_TECHNOLOGY_STACKs;
            }
        }
        private ObjectSet<REF_TECHNOLOGY_STACK> _REF_TECHNOLOGY_STACKs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<REF_VENDOR> REF_VENDORs
        {
            get
            {
                if ((_REF_VENDORs == null))
                {
                    _REF_VENDORs = base.CreateObjectSet<REF_VENDOR>("REF_VENDORs");
                }
                return _REF_VENDORs;
            }
        }
        private ObjectSet<REF_VENDOR> _REF_VENDORs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<RESOURCE> RESOURCEs
        {
            get
            {
                if ((_RESOURCEs == null))
                {
                    _RESOURCEs = base.CreateObjectSet<RESOURCE>("RESOURCEs");
                }
                return _RESOURCEs;
            }
        }
        private ObjectSet<RESOURCE> _RESOURCEs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TP_APPLICATION> TP_APPLICATIONs
        {
            get
            {
                if ((_TP_APPLICATIONs == null))
                {
                    _TP_APPLICATIONs = base.CreateObjectSet<TP_APPLICATION>("TP_APPLICATIONs");
                }
                return _TP_APPLICATIONs;
            }
        }
        private ObjectSet<TP_APPLICATION> _TP_APPLICATIONs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TP_DOCUMENT_LINK> TP_DOCUMENT_LINKs
        {
            get
            {
                if ((_TP_DOCUMENT_LINKs == null))
                {
                    _TP_DOCUMENT_LINKs = base.CreateObjectSet<TP_DOCUMENT_LINK>("TP_DOCUMENT_LINKs");
                }
                return _TP_DOCUMENT_LINKs;
            }
        }
        private ObjectSet<TP_DOCUMENT_LINK> _TP_DOCUMENT_LINKs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TP_PHASE> TP_PHASEs
        {
            get
            {
                if ((_TP_PHASEs == null))
                {
                    _TP_PHASEs = base.CreateObjectSet<TP_PHASE>("TP_PHASEs");
                }
                return _TP_PHASEs;
            }
        }
        private ObjectSet<TP_PHASE> _TP_PHASEs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TP_RESOURCE_ALLOCATION> TP_RESOURCE_ALLOCATIONs
        {
            get
            {
                if ((_TP_RESOURCE_ALLOCATIONs == null))
                {
                    _TP_RESOURCE_ALLOCATIONs = base.CreateObjectSet<TP_RESOURCE_ALLOCATION>("TP_RESOURCE_ALLOCATIONs");
                }
                return _TP_RESOURCE_ALLOCATIONs;
            }
        }
        private ObjectSet<TP_RESOURCE_ALLOCATION> _TP_RESOURCE_ALLOCATIONs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TP_STAKEHOLDER> TP_STAKEHOLDERs
        {
            get
            {
                if ((_TP_STAKEHOLDERs == null))
                {
                    _TP_STAKEHOLDERs = base.CreateObjectSet<TP_STAKEHOLDER>("TP_STAKEHOLDERs");
                }
                return _TP_STAKEHOLDERs;
            }
        }
        private ObjectSet<TP_STAKEHOLDER> _TP_STAKEHOLDERs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TP_VENDOR> TP_VENDORs
        {
            get
            {
                if ((_TP_VENDORs == null))
                {
                    _TP_VENDORs = base.CreateObjectSet<TP_VENDOR>("TP_VENDORs");
                }
                return _TP_VENDORs;
            }
        }
        private ObjectSet<TP_VENDOR> _TP_VENDORs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TP> TPs
        {
            get
            {
                if ((_TPs == null))
                {
                    _TPs = base.CreateObjectSet<TP>("TPs");
                }
                return _TPs;
            }
        }
        private ObjectSet<TP> _TPs;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the APPLICATIONs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAPPLICATIONs(APP aPP)
        {
            base.AddObject("APPLICATIONs", aPP);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the REF_APPLICATION_TYPEs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToREF_APPLICATION_TYPEs(REF_APPLICATION_TYPE rEF_APPLICATION_TYPE)
        {
            base.AddObject("REF_APPLICATION_TYPEs", rEF_APPLICATION_TYPE);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the REF_COMPLEXITies EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToREF_COMPLEXITies(REF_COMPLEXITY rEF_COMPLEXITY)
        {
            base.AddObject("REF_COMPLEXITies", rEF_COMPLEXITY);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the REF_DOCUMENT_TYPEs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToREF_DOCUMENT_TYPEs(REF_DOCUMENT_TYPE rEF_DOCUMENT_TYPE)
        {
            base.AddObject("REF_DOCUMENT_TYPEs", rEF_DOCUMENT_TYPE);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the REF_GAPs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToREF_GAPs(REF_GAP rEF_GAP)
        {
            base.AddObject("REF_GAPs", rEF_GAP);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the REF_PHASEs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToREF_PHASEs(REF_PHASE rEF_PHASE)
        {
            base.AddObject("REF_PHASEs", rEF_PHASE);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the REF_ROLEs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToREF_ROLEs(REF_ROLE rEF_ROLE)
        {
            base.AddObject("REF_ROLEs", rEF_ROLE);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the REF_STAKEHOLDERs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToREF_STAKEHOLDERs(REF_STAKEHOLDER rEF_STAKEHOLDER)
        {
            base.AddObject("REF_STAKEHOLDERs", rEF_STAKEHOLDER);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the REF_STATUS EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToREF_STATUS(REF_STATUS rEF_STATUS)
        {
            base.AddObject("REF_STATUS", rEF_STATUS);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the REF_TECHNOLOGies EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToREF_TECHNOLOGies(REF_TECHNOLOGY rEF_TECHNOLOGY)
        {
            base.AddObject("REF_TECHNOLOGies", rEF_TECHNOLOGY);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the REF_TECHNOLOGY_STACKs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToREF_TECHNOLOGY_STACKs(REF_TECHNOLOGY_STACK rEF_TECHNOLOGY_STACK)
        {
            base.AddObject("REF_TECHNOLOGY_STACKs", rEF_TECHNOLOGY_STACK);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the REF_VENDORs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToREF_VENDORs(REF_VENDOR rEF_VENDOR)
        {
            base.AddObject("REF_VENDORs", rEF_VENDOR);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the RESOURCEs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRESOURCEs(RESOURCE rESOURCE)
        {
            base.AddObject("RESOURCEs", rESOURCE);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TP_APPLICATIONs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTP_APPLICATIONs(TP_APPLICATION tP_APPLICATION)
        {
            base.AddObject("TP_APPLICATIONs", tP_APPLICATION);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TP_DOCUMENT_LINKs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTP_DOCUMENT_LINKs(TP_DOCUMENT_LINK tP_DOCUMENT_LINK)
        {
            base.AddObject("TP_DOCUMENT_LINKs", tP_DOCUMENT_LINK);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TP_PHASEs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTP_PHASEs(TP_PHASE tP_PHASE)
        {
            base.AddObject("TP_PHASEs", tP_PHASE);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TP_RESOURCE_ALLOCATIONs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTP_RESOURCE_ALLOCATIONs(TP_RESOURCE_ALLOCATION tP_RESOURCE_ALLOCATION)
        {
            base.AddObject("TP_RESOURCE_ALLOCATIONs", tP_RESOURCE_ALLOCATION);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TP_STAKEHOLDERs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTP_STAKEHOLDERs(TP_STAKEHOLDER tP_STAKEHOLDER)
        {
            base.AddObject("TP_STAKEHOLDERs", tP_STAKEHOLDER);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TP_VENDORs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTP_VENDORs(TP_VENDOR tP_VENDOR)
        {
            base.AddObject("TP_VENDORs", tP_VENDOR);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TPs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTPs(TP tP)
        {
            base.AddObject("TPs", tP);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LightSwitchApplication", Name="APP")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class APP : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new APP object.
        /// </summary>
        /// <param name="applicationID">Initial value of the ApplicationID property.</param>
        public static APP CreateAPP(global::System.Int16 applicationID)
        {
            APP aPP = new APP();
            aPP.ApplicationID = applicationID;
            return aPP;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 ApplicationID
        {
            get
            {
                return _ApplicationID;
            }
            set
            {
                if (_ApplicationID != value)
                {
                    OnApplicationIDChanging(value);
                    ReportPropertyChanging("ApplicationID");
                    _ApplicationID = value;
                    ReportPropertyChanged("ApplicationID");
                    OnApplicationIDChanged();
                }
            }
        }
        private global::System.Int16 _ApplicationID;
        partial void OnApplicationIDChanging(global::System.Int16 value);
        partial void OnApplicationIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = value;
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = value;
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private global::System.String _CreatedBy;
        partial void OnCreatedByChanging(global::System.String value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = value;
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedDate;
        partial void OnCreatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ModifiedBy
        {
            get
            {
                return _ModifiedBy;
            }
            set
            {
                OnModifiedByChanging(value);
                ReportPropertyChanging("ModifiedBy");
                _ModifiedBy = value;
                ReportPropertyChanged("ModifiedBy");
                OnModifiedByChanged();
            }
        }
        private global::System.String _ModifiedBy;
        partial void OnModifiedByChanging(global::System.String value);
        partial void OnModifiedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ModifiedDate
        {
            get
            {
                return _ModifiedDate;
            }
            set
            {
                OnModifiedDateChanging(value);
                ReportPropertyChanging("ModifiedDate");
                _ModifiedDate = value;
                ReportPropertyChanged("ModifiedDate");
                OnModifiedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ModifiedDate;
        partial void OnModifiedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnModifiedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TechnologyID
        {
            get
            {
                return _TechnologyID;
            }
            set
            {
                OnTechnologyIDChanging(value);
                ReportPropertyChanging("TechnologyID");
                _TechnologyID = value;
                ReportPropertyChanged("TechnologyID");
                OnTechnologyIDChanged();
            }
        }
        private Nullable<global::System.Int32> _TechnologyID;
        partial void OnTechnologyIDChanging(Nullable<global::System.Int32> value);
        partial void OnTechnologyIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "REF_TECHNOLOGY_APP", "REF_TECHNOLOGY")]
        public REF_TECHNOLOGY REF_TECHNOLOGY
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<REF_TECHNOLOGY>("LightSwitchApplication.REF_TECHNOLOGY_APP", "REF_TECHNOLOGY").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<REF_TECHNOLOGY>("LightSwitchApplication.REF_TECHNOLOGY_APP", "REF_TECHNOLOGY").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<REF_TECHNOLOGY> REF_TECHNOLOGYReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<REF_TECHNOLOGY>("LightSwitchApplication.REF_TECHNOLOGY_APP", "REF_TECHNOLOGY");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<REF_TECHNOLOGY>("LightSwitchApplication.REF_TECHNOLOGY_APP", "REF_TECHNOLOGY", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "APP_TP_APPLICATION", "TP_APPLICATION")]
        public EntityCollection<TP_APPLICATION> TP_APPLICATIONs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TP_APPLICATION>("LightSwitchApplication.APP_TP_APPLICATION", "TP_APPLICATION");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TP_APPLICATION>("LightSwitchApplication.APP_TP_APPLICATION", "TP_APPLICATION", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LightSwitchApplication", Name="REF_APPLICATION_TYPE")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class REF_APPLICATION_TYPE : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new REF_APPLICATION_TYPE object.
        /// </summary>
        /// <param name="applicationTypeID">Initial value of the ApplicationTypeID property.</param>
        public static REF_APPLICATION_TYPE CreateREF_APPLICATION_TYPE(global::System.Int16 applicationTypeID)
        {
            REF_APPLICATION_TYPE rEF_APPLICATION_TYPE = new REF_APPLICATION_TYPE();
            rEF_APPLICATION_TYPE.ApplicationTypeID = applicationTypeID;
            return rEF_APPLICATION_TYPE;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 ApplicationTypeID
        {
            get
            {
                return _ApplicationTypeID;
            }
            set
            {
                if (_ApplicationTypeID != value)
                {
                    OnApplicationTypeIDChanging(value);
                    ReportPropertyChanging("ApplicationTypeID");
                    _ApplicationTypeID = value;
                    ReportPropertyChanged("ApplicationTypeID");
                    OnApplicationTypeIDChanged();
                }
            }
        }
        private global::System.Int16 _ApplicationTypeID;
        partial void OnApplicationTypeIDChanging(global::System.Int16 value);
        partial void OnApplicationTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = value;
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = value;
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = value;
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private global::System.String _CreatedBy;
        partial void OnCreatedByChanging(global::System.String value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedTime
        {
            get
            {
                return _CreatedTime;
            }
            set
            {
                OnCreatedTimeChanging(value);
                ReportPropertyChanging("CreatedTime");
                _CreatedTime = value;
                ReportPropertyChanged("CreatedTime");
                OnCreatedTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedTime;
        partial void OnCreatedTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ModifiedBy
        {
            get
            {
                return _ModifiedBy;
            }
            set
            {
                OnModifiedByChanging(value);
                ReportPropertyChanging("ModifiedBy");
                _ModifiedBy = value;
                ReportPropertyChanged("ModifiedBy");
                OnModifiedByChanged();
            }
        }
        private global::System.String _ModifiedBy;
        partial void OnModifiedByChanging(global::System.String value);
        partial void OnModifiedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ModifiedDate
        {
            get
            {
                return _ModifiedDate;
            }
            set
            {
                OnModifiedDateChanging(value);
                ReportPropertyChanging("ModifiedDate");
                _ModifiedDate = value;
                ReportPropertyChanged("ModifiedDate");
                OnModifiedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ModifiedDate;
        partial void OnModifiedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnModifiedDateChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_TP_REF_APPLICATION_TYPE", "TP")]
        public EntityCollection<TP> TPs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TP>("LightSwitchApplication.FK_TP_REF_APPLICATION_TYPE", "TP");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TP>("LightSwitchApplication.FK_TP_REF_APPLICATION_TYPE", "TP", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LightSwitchApplication", Name="REF_COMPLEXITY")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class REF_COMPLEXITY : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new REF_COMPLEXITY object.
        /// </summary>
        /// <param name="complexityID">Initial value of the ComplexityID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static REF_COMPLEXITY CreateREF_COMPLEXITY(global::System.Int16 complexityID, global::System.String name)
        {
            REF_COMPLEXITY rEF_COMPLEXITY = new REF_COMPLEXITY();
            rEF_COMPLEXITY.ComplexityID = complexityID;
            rEF_COMPLEXITY.Name = name;
            return rEF_COMPLEXITY;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 ComplexityID
        {
            get
            {
                return _ComplexityID;
            }
            set
            {
                if (_ComplexityID != value)
                {
                    OnComplexityIDChanging(value);
                    ReportPropertyChanging("ComplexityID");
                    _ComplexityID = value;
                    ReportPropertyChanged("ComplexityID");
                    OnComplexityIDChanged();
                }
            }
        }
        private global::System.Int16 _ComplexityID;
        partial void OnComplexityIDChanging(global::System.Int16 value);
        partial void OnComplexityIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = value;
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = value;
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private global::System.String _CreatedBy;
        partial void OnCreatedByChanging(global::System.String value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = value;
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedDate;
        partial void OnCreatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ModifiedBy
        {
            get
            {
                return _ModifiedBy;
            }
            set
            {
                OnModifiedByChanging(value);
                ReportPropertyChanging("ModifiedBy");
                _ModifiedBy = value;
                ReportPropertyChanged("ModifiedBy");
                OnModifiedByChanged();
            }
        }
        private global::System.String _ModifiedBy;
        partial void OnModifiedByChanging(global::System.String value);
        partial void OnModifiedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ModifiedDate
        {
            get
            {
                return _ModifiedDate;
            }
            set
            {
                OnModifiedDateChanging(value);
                ReportPropertyChanging("ModifiedDate");
                _ModifiedDate = value;
                ReportPropertyChanged("ModifiedDate");
                OnModifiedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ModifiedDate;
        partial void OnModifiedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnModifiedDateChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_TP_REF_COMPLEXITY", "TP")]
        public EntityCollection<TP> TPs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TP>("LightSwitchApplication.FK_TP_REF_COMPLEXITY", "TP");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TP>("LightSwitchApplication.FK_TP_REF_COMPLEXITY", "TP", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_TP_REF_COMPLEXITY1", "TP")]
        public EntityCollection<TP> TPs1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TP>("LightSwitchApplication.FK_TP_REF_COMPLEXITY1", "TP");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TP>("LightSwitchApplication.FK_TP_REF_COMPLEXITY1", "TP", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LightSwitchApplication", Name="REF_DOCUMENT_TYPE")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class REF_DOCUMENT_TYPE : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new REF_DOCUMENT_TYPE object.
        /// </summary>
        /// <param name="documentTypeID">Initial value of the DocumentTypeID property.</param>
        public static REF_DOCUMENT_TYPE CreateREF_DOCUMENT_TYPE(global::System.Int16 documentTypeID)
        {
            REF_DOCUMENT_TYPE rEF_DOCUMENT_TYPE = new REF_DOCUMENT_TYPE();
            rEF_DOCUMENT_TYPE.DocumentTypeID = documentTypeID;
            return rEF_DOCUMENT_TYPE;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 DocumentTypeID
        {
            get
            {
                return _DocumentTypeID;
            }
            set
            {
                if (_DocumentTypeID != value)
                {
                    OnDocumentTypeIDChanging(value);
                    ReportPropertyChanging("DocumentTypeID");
                    _DocumentTypeID = value;
                    ReportPropertyChanged("DocumentTypeID");
                    OnDocumentTypeIDChanged();
                }
            }
        }
        private global::System.Int16 _DocumentTypeID;
        partial void OnDocumentTypeIDChanging(global::System.Int16 value);
        partial void OnDocumentTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = value;
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = value;
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = value;
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedDate;
        partial void OnCreatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = value;
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private global::System.String _CreatedBy;
        partial void OnCreatedByChanging(global::System.String value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ModifiedBy
        {
            get
            {
                return _ModifiedBy;
            }
            set
            {
                OnModifiedByChanging(value);
                ReportPropertyChanging("ModifiedBy");
                _ModifiedBy = value;
                ReportPropertyChanged("ModifiedBy");
                OnModifiedByChanged();
            }
        }
        private global::System.String _ModifiedBy;
        partial void OnModifiedByChanging(global::System.String value);
        partial void OnModifiedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ModifiedDate
        {
            get
            {
                return _ModifiedDate;
            }
            set
            {
                OnModifiedDateChanging(value);
                ReportPropertyChanging("ModifiedDate");
                _ModifiedDate = value;
                ReportPropertyChanged("ModifiedDate");
                OnModifiedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ModifiedDate;
        partial void OnModifiedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnModifiedDateChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_TP_DOCUMENT_LINK_REF_DOCUMENT_TYPE", "TP_DOCUMENT_LINK")]
        public EntityCollection<TP_DOCUMENT_LINK> TP_DOCUMENT_LINKs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TP_DOCUMENT_LINK>("LightSwitchApplication.FK_TP_DOCUMENT_LINK_REF_DOCUMENT_TYPE", "TP_DOCUMENT_LINK");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TP_DOCUMENT_LINK>("LightSwitchApplication.FK_TP_DOCUMENT_LINK_REF_DOCUMENT_TYPE", "TP_DOCUMENT_LINK", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LightSwitchApplication", Name="REF_GAP")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class REF_GAP : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new REF_GAP object.
        /// </summary>
        /// <param name="gapID">Initial value of the GapID property.</param>
        public static REF_GAP CreateREF_GAP(global::System.Int16 gapID)
        {
            REF_GAP rEF_GAP = new REF_GAP();
            rEF_GAP.GapID = gapID;
            return rEF_GAP;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 GapID
        {
            get
            {
                return _GapID;
            }
            set
            {
                if (_GapID != value)
                {
                    OnGapIDChanging(value);
                    ReportPropertyChanging("GapID");
                    _GapID = value;
                    ReportPropertyChanged("GapID");
                    OnGapIDChanged();
                }
            }
        }
        private global::System.Int16 _GapID;
        partial void OnGapIDChanging(global::System.Int16 value);
        partial void OnGapIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = value;
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = value;
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = value;
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private global::System.String _CreatedBy;
        partial void OnCreatedByChanging(global::System.String value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = value;
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedDate;
        partial void OnCreatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ModifiedBy
        {
            get
            {
                return _ModifiedBy;
            }
            set
            {
                OnModifiedByChanging(value);
                ReportPropertyChanging("ModifiedBy");
                _ModifiedBy = value;
                ReportPropertyChanged("ModifiedBy");
                OnModifiedByChanged();
            }
        }
        private global::System.String _ModifiedBy;
        partial void OnModifiedByChanging(global::System.String value);
        partial void OnModifiedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ModifiedDate
        {
            get
            {
                return _ModifiedDate;
            }
            set
            {
                OnModifiedDateChanging(value);
                ReportPropertyChanging("ModifiedDate");
                _ModifiedDate = value;
                ReportPropertyChanged("ModifiedDate");
                OnModifiedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ModifiedDate;
        partial void OnModifiedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnModifiedDateChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_TP_REF_GAP", "TP")]
        public EntityCollection<TP> TPs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TP>("LightSwitchApplication.FK_TP_REF_GAP", "TP");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TP>("LightSwitchApplication.FK_TP_REF_GAP", "TP", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_TP_REF_GAP1", "TP")]
        public EntityCollection<TP> TPs1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TP>("LightSwitchApplication.FK_TP_REF_GAP1", "TP");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TP>("LightSwitchApplication.FK_TP_REF_GAP1", "TP", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LightSwitchApplication", Name="REF_PHASE")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class REF_PHASE : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new REF_PHASE object.
        /// </summary>
        /// <param name="phaseID">Initial value of the PhaseID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static REF_PHASE CreateREF_PHASE(global::System.Int16 phaseID, global::System.String name)
        {
            REF_PHASE rEF_PHASE = new REF_PHASE();
            rEF_PHASE.PhaseID = phaseID;
            rEF_PHASE.Name = name;
            return rEF_PHASE;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 PhaseID
        {
            get
            {
                return _PhaseID;
            }
            set
            {
                if (_PhaseID != value)
                {
                    OnPhaseIDChanging(value);
                    ReportPropertyChanging("PhaseID");
                    _PhaseID = value;
                    ReportPropertyChanged("PhaseID");
                    OnPhaseIDChanged();
                }
            }
        }
        private global::System.Int16 _PhaseID;
        partial void OnPhaseIDChanging(global::System.Int16 value);
        partial void OnPhaseIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = value;
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = value;
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = value;
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedDate;
        partial void OnCreatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = value;
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private global::System.String _CreatedBy;
        partial void OnCreatedByChanging(global::System.String value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ModifiedBy
        {
            get
            {
                return _ModifiedBy;
            }
            set
            {
                OnModifiedByChanging(value);
                ReportPropertyChanging("ModifiedBy");
                _ModifiedBy = value;
                ReportPropertyChanged("ModifiedBy");
                OnModifiedByChanged();
            }
        }
        private global::System.String _ModifiedBy;
        partial void OnModifiedByChanging(global::System.String value);
        partial void OnModifiedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ModifiedDate
        {
            get
            {
                return _ModifiedDate;
            }
            set
            {
                OnModifiedDateChanging(value);
                ReportPropertyChanging("ModifiedDate");
                _ModifiedDate = value;
                ReportPropertyChanged("ModifiedDate");
                OnModifiedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ModifiedDate;
        partial void OnModifiedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnModifiedDateChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_TP_PHASE_TP_PHASE", "TP_PHASE")]
        public EntityCollection<TP_PHASE> TP_PHASEs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TP_PHASE>("LightSwitchApplication.FK_TP_PHASE_TP_PHASE", "TP_PHASE");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TP_PHASE>("LightSwitchApplication.FK_TP_PHASE_TP_PHASE", "TP_PHASE", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LightSwitchApplication", Name="REF_ROLE")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class REF_ROLE : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new REF_ROLE object.
        /// </summary>
        /// <param name="roleID">Initial value of the RoleID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static REF_ROLE CreateREF_ROLE(global::System.Int16 roleID, global::System.String name)
        {
            REF_ROLE rEF_ROLE = new REF_ROLE();
            rEF_ROLE.RoleID = roleID;
            rEF_ROLE.Name = name;
            return rEF_ROLE;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 RoleID
        {
            get
            {
                return _RoleID;
            }
            set
            {
                if (_RoleID != value)
                {
                    OnRoleIDChanging(value);
                    ReportPropertyChanging("RoleID");
                    _RoleID = value;
                    ReportPropertyChanged("RoleID");
                    OnRoleIDChanged();
                }
            }
        }
        private global::System.Int16 _RoleID;
        partial void OnRoleIDChanging(global::System.Int16 value);
        partial void OnRoleIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = value;
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = value;
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = value;
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedDate;
        partial void OnCreatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = value;
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private global::System.String _CreatedBy;
        partial void OnCreatedByChanging(global::System.String value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ModifiedBy
        {
            get
            {
                return _ModifiedBy;
            }
            set
            {
                OnModifiedByChanging(value);
                ReportPropertyChanging("ModifiedBy");
                _ModifiedBy = value;
                ReportPropertyChanged("ModifiedBy");
                OnModifiedByChanged();
            }
        }
        private global::System.String _ModifiedBy;
        partial void OnModifiedByChanging(global::System.String value);
        partial void OnModifiedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ModifiedDate
        {
            get
            {
                return _ModifiedDate;
            }
            set
            {
                OnModifiedDateChanging(value);
                ReportPropertyChanging("ModifiedDate");
                _ModifiedDate = value;
                ReportPropertyChanged("ModifiedDate");
                OnModifiedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ModifiedDate;
        partial void OnModifiedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnModifiedDateChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_RESOURCE_REF_ROLE", "RESOURCE")]
        public EntityCollection<RESOURCE> RESOURCEs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RESOURCE>("LightSwitchApplication.FK_RESOURCE_REF_ROLE", "RESOURCE");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RESOURCE>("LightSwitchApplication.FK_RESOURCE_REF_ROLE", "RESOURCE", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LightSwitchApplication", Name="REF_STAKEHOLDER")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class REF_STAKEHOLDER : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new REF_STAKEHOLDER object.
        /// </summary>
        /// <param name="stakeholderID">Initial value of the StakeholderID property.</param>
        public static REF_STAKEHOLDER CreateREF_STAKEHOLDER(global::System.Int16 stakeholderID)
        {
            REF_STAKEHOLDER rEF_STAKEHOLDER = new REF_STAKEHOLDER();
            rEF_STAKEHOLDER.StakeholderID = stakeholderID;
            return rEF_STAKEHOLDER;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 StakeholderID
        {
            get
            {
                return _StakeholderID;
            }
            set
            {
                if (_StakeholderID != value)
                {
                    OnStakeholderIDChanging(value);
                    ReportPropertyChanging("StakeholderID");
                    _StakeholderID = value;
                    ReportPropertyChanged("StakeholderID");
                    OnStakeholderIDChanged();
                }
            }
        }
        private global::System.Int16 _StakeholderID;
        partial void OnStakeholderIDChanging(global::System.Int16 value);
        partial void OnStakeholderIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = value;
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = value;
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = value;
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private global::System.String _CreatedBy;
        partial void OnCreatedByChanging(global::System.String value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = value;
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedDate;
        partial void OnCreatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ModifiedBy
        {
            get
            {
                return _ModifiedBy;
            }
            set
            {
                OnModifiedByChanging(value);
                ReportPropertyChanging("ModifiedBy");
                _ModifiedBy = value;
                ReportPropertyChanged("ModifiedBy");
                OnModifiedByChanged();
            }
        }
        private global::System.String _ModifiedBy;
        partial void OnModifiedByChanging(global::System.String value);
        partial void OnModifiedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ModifiedDate
        {
            get
            {
                return _ModifiedDate;
            }
            set
            {
                OnModifiedDateChanging(value);
                ReportPropertyChanging("ModifiedDate");
                _ModifiedDate = value;
                ReportPropertyChanged("ModifiedDate");
                OnModifiedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ModifiedDate;
        partial void OnModifiedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnModifiedDateChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_TP_STAKEHOLDER_REF_STAKEHOLDER", "TP_STAKEHOLDER")]
        public EntityCollection<TP_STAKEHOLDER> TP_STAKEHOLDERs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TP_STAKEHOLDER>("LightSwitchApplication.FK_TP_STAKEHOLDER_REF_STAKEHOLDER", "TP_STAKEHOLDER");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TP_STAKEHOLDER>("LightSwitchApplication.FK_TP_STAKEHOLDER_REF_STAKEHOLDER", "TP_STAKEHOLDER", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LightSwitchApplication", Name="REF_STATUS")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class REF_STATUS : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new REF_STATUS object.
        /// </summary>
        /// <param name="statusID">Initial value of the StatusID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static REF_STATUS CreateREF_STATUS(global::System.Int16 statusID, global::System.String name)
        {
            REF_STATUS rEF_STATUS = new REF_STATUS();
            rEF_STATUS.StatusID = statusID;
            rEF_STATUS.Name = name;
            return rEF_STATUS;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 StatusID
        {
            get
            {
                return _StatusID;
            }
            set
            {
                if (_StatusID != value)
                {
                    OnStatusIDChanging(value);
                    ReportPropertyChanging("StatusID");
                    _StatusID = value;
                    ReportPropertyChanged("StatusID");
                    OnStatusIDChanged();
                }
            }
        }
        private global::System.Int16 _StatusID;
        partial void OnStatusIDChanging(global::System.Int16 value);
        partial void OnStatusIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = value;
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = value;
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = value;
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedDate;
        partial void OnCreatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = value;
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private global::System.String _CreatedBy;
        partial void OnCreatedByChanging(global::System.String value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ModifiedDate
        {
            get
            {
                return _ModifiedDate;
            }
            set
            {
                OnModifiedDateChanging(value);
                ReportPropertyChanging("ModifiedDate");
                _ModifiedDate = value;
                ReportPropertyChanged("ModifiedDate");
                OnModifiedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ModifiedDate;
        partial void OnModifiedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnModifiedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ModifiedBy
        {
            get
            {
                return _ModifiedBy;
            }
            set
            {
                OnModifiedByChanging(value);
                ReportPropertyChanging("ModifiedBy");
                _ModifiedBy = value;
                ReportPropertyChanged("ModifiedBy");
                OnModifiedByChanged();
            }
        }
        private global::System.String _ModifiedBy;
        partial void OnModifiedByChanging(global::System.String value);
        partial void OnModifiedByChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_RESOURCE_REF_STATUS", "RESOURCE")]
        public EntityCollection<RESOURCE> RESOURCEs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RESOURCE>("LightSwitchApplication.FK_RESOURCE_REF_STATUS", "RESOURCE");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RESOURCE>("LightSwitchApplication.FK_RESOURCE_REF_STATUS", "RESOURCE", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LightSwitchApplication", Name="REF_TECHNOLOGY")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class REF_TECHNOLOGY : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new REF_TECHNOLOGY object.
        /// </summary>
        /// <param name="technologyID">Initial value of the TechnologyID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static REF_TECHNOLOGY CreateREF_TECHNOLOGY(global::System.Int32 technologyID, global::System.String name)
        {
            REF_TECHNOLOGY rEF_TECHNOLOGY = new REF_TECHNOLOGY();
            rEF_TECHNOLOGY.TechnologyID = technologyID;
            rEF_TECHNOLOGY.Name = name;
            return rEF_TECHNOLOGY;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TechnologyID
        {
            get
            {
                return _TechnologyID;
            }
            set
            {
                if (_TechnologyID != value)
                {
                    OnTechnologyIDChanging(value);
                    ReportPropertyChanging("TechnologyID");
                    _TechnologyID = value;
                    ReportPropertyChanged("TechnologyID");
                    OnTechnologyIDChanged();
                }
            }
        }
        private global::System.Int32 _TechnologyID;
        partial void OnTechnologyIDChanging(global::System.Int32 value);
        partial void OnTechnologyIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = value;
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = value;
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = value;
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedDate;
        partial void OnCreatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = value;
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private global::System.String _CreatedBy;
        partial void OnCreatedByChanging(global::System.String value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ModifiedBy
        {
            get
            {
                return _ModifiedBy;
            }
            set
            {
                OnModifiedByChanging(value);
                ReportPropertyChanging("ModifiedBy");
                _ModifiedBy = value;
                ReportPropertyChanged("ModifiedBy");
                OnModifiedByChanged();
            }
        }
        private global::System.String _ModifiedBy;
        partial void OnModifiedByChanging(global::System.String value);
        partial void OnModifiedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ModifiedDate
        {
            get
            {
                return _ModifiedDate;
            }
            set
            {
                OnModifiedDateChanging(value);
                ReportPropertyChanging("ModifiedDate");
                _ModifiedDate = value;
                ReportPropertyChanged("ModifiedDate");
                OnModifiedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ModifiedDate;
        partial void OnModifiedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnModifiedDateChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "REF_TECHNOLOGY_APP", "APP")]
        public EntityCollection<APP> APPLICATIONs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<APP>("LightSwitchApplication.REF_TECHNOLOGY_APP", "APP");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<APP>("LightSwitchApplication.REF_TECHNOLOGY_APP", "APP", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LightSwitchApplication", Name="REF_TECHNOLOGY_STACK")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class REF_TECHNOLOGY_STACK : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new REF_TECHNOLOGY_STACK object.
        /// </summary>
        /// <param name="technologyStackID">Initial value of the TechnologyStackID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static REF_TECHNOLOGY_STACK CreateREF_TECHNOLOGY_STACK(global::System.Int16 technologyStackID, global::System.String name)
        {
            REF_TECHNOLOGY_STACK rEF_TECHNOLOGY_STACK = new REF_TECHNOLOGY_STACK();
            rEF_TECHNOLOGY_STACK.TechnologyStackID = technologyStackID;
            rEF_TECHNOLOGY_STACK.Name = name;
            return rEF_TECHNOLOGY_STACK;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 TechnologyStackID
        {
            get
            {
                return _TechnologyStackID;
            }
            set
            {
                if (_TechnologyStackID != value)
                {
                    OnTechnologyStackIDChanging(value);
                    ReportPropertyChanging("TechnologyStackID");
                    _TechnologyStackID = value;
                    ReportPropertyChanged("TechnologyStackID");
                    OnTechnologyStackIDChanged();
                }
            }
        }
        private global::System.Int16 _TechnologyStackID;
        partial void OnTechnologyStackIDChanging(global::System.Int16 value);
        partial void OnTechnologyStackIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = value;
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = value;
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = value;
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedDate;
        partial void OnCreatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = value;
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private global::System.String _CreatedBy;
        partial void OnCreatedByChanging(global::System.String value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ModifiedBy
        {
            get
            {
                return _ModifiedBy;
            }
            set
            {
                OnModifiedByChanging(value);
                ReportPropertyChanging("ModifiedBy");
                _ModifiedBy = value;
                ReportPropertyChanged("ModifiedBy");
                OnModifiedByChanged();
            }
        }
        private global::System.String _ModifiedBy;
        partial void OnModifiedByChanging(global::System.String value);
        partial void OnModifiedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ModifiedDate
        {
            get
            {
                return _ModifiedDate;
            }
            set
            {
                OnModifiedDateChanging(value);
                ReportPropertyChanging("ModifiedDate");
                _ModifiedDate = value;
                ReportPropertyChanged("ModifiedDate");
                OnModifiedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ModifiedDate;
        partial void OnModifiedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnModifiedDateChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_TP_REF_TECHNOLOGY_STACK", "TP")]
        public EntityCollection<TP> TPs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TP>("LightSwitchApplication.FK_TP_REF_TECHNOLOGY_STACK", "TP");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TP>("LightSwitchApplication.FK_TP_REF_TECHNOLOGY_STACK", "TP", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LightSwitchApplication", Name="REF_VENDOR")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class REF_VENDOR : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new REF_VENDOR object.
        /// </summary>
        /// <param name="vendorID">Initial value of the VendorID property.</param>
        /// <param name="isEsu">Initial value of the IsEsu property.</param>
        public static REF_VENDOR CreateREF_VENDOR(global::System.Int16 vendorID, global::System.Boolean isEsu)
        {
            REF_VENDOR rEF_VENDOR = new REF_VENDOR();
            rEF_VENDOR.VendorID = vendorID;
            rEF_VENDOR.IsEsu = isEsu;
            return rEF_VENDOR;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 VendorID
        {
            get
            {
                return _VendorID;
            }
            set
            {
                if (_VendorID != value)
                {
                    OnVendorIDChanging(value);
                    ReportPropertyChanging("VendorID");
                    _VendorID = value;
                    ReportPropertyChanged("VendorID");
                    OnVendorIDChanged();
                }
            }
        }
        private global::System.Int16 _VendorID;
        partial void OnVendorIDChanging(global::System.Int16 value);
        partial void OnVendorIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = value;
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = value;
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsEsu
        {
            get
            {
                return _IsEsu;
            }
            set
            {
                OnIsEsuChanging(value);
                ReportPropertyChanging("IsEsu");
                _IsEsu = value;
                ReportPropertyChanged("IsEsu");
                OnIsEsuChanged();
            }
        }
        private global::System.Boolean _IsEsu;
        partial void OnIsEsuChanging(global::System.Boolean value);
        partial void OnIsEsuChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = value;
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private global::System.String _CreatedBy;
        partial void OnCreatedByChanging(global::System.String value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = value;
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedDate;
        partial void OnCreatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ModifiedBy
        {
            get
            {
                return _ModifiedBy;
            }
            set
            {
                OnModifiedByChanging(value);
                ReportPropertyChanging("ModifiedBy");
                _ModifiedBy = value;
                ReportPropertyChanged("ModifiedBy");
                OnModifiedByChanged();
            }
        }
        private global::System.String _ModifiedBy;
        partial void OnModifiedByChanging(global::System.String value);
        partial void OnModifiedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ModifiedDate
        {
            get
            {
                return _ModifiedDate;
            }
            set
            {
                OnModifiedDateChanging(value);
                ReportPropertyChanging("ModifiedDate");
                _ModifiedDate = value;
                ReportPropertyChanged("ModifiedDate");
                OnModifiedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ModifiedDate;
        partial void OnModifiedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnModifiedDateChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_TP_VENDOR_REF_VENDOR", "TP_VENDOR")]
        public EntityCollection<TP_VENDOR> TP_VENDORs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TP_VENDOR>("LightSwitchApplication.FK_TP_VENDOR_REF_VENDOR", "TP_VENDOR");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TP_VENDOR>("LightSwitchApplication.FK_TP_VENDOR_REF_VENDOR", "TP_VENDOR", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LightSwitchApplication", Name="RESOURCE")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class RESOURCE : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new RESOURCE object.
        /// </summary>
        /// <param name="resourceID">Initial value of the ResourceID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="emailId">Initial value of the EmailId property.</param>
        public static RESOURCE CreateRESOURCE(global::System.Int32 resourceID, global::System.String name, global::System.String emailId)
        {
            RESOURCE rESOURCE = new RESOURCE();
            rESOURCE.ResourceID = resourceID;
            rESOURCE.Name = name;
            rESOURCE.EmailId = emailId;
            return rESOURCE;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ResourceID
        {
            get
            {
                return _ResourceID;
            }
            set
            {
                if (_ResourceID != value)
                {
                    OnResourceIDChanging(value);
                    ReportPropertyChanging("ResourceID");
                    _ResourceID = value;
                    ReportPropertyChanged("ResourceID");
                    OnResourceIDChanged();
                }
            }
        }
        private global::System.Int32 _ResourceID;
        partial void OnResourceIDChanging(global::System.Int32 value);
        partial void OnResourceIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = value;
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String EmailId
        {
            get
            {
                return _EmailId;
            }
            set
            {
                OnEmailIdChanging(value);
                ReportPropertyChanging("EmailId");
                _EmailId = value;
                ReportPropertyChanged("EmailId");
                OnEmailIdChanged();
            }
        }
        private global::System.String _EmailId;
        partial void OnEmailIdChanging(global::System.String value);
        partial void OnEmailIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = value;
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private global::System.String _CreatedBy;
        partial void OnCreatedByChanging(global::System.String value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = value;
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedDate;
        partial void OnCreatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ModifiedDate
        {
            get
            {
                return _ModifiedDate;
            }
            set
            {
                OnModifiedDateChanging(value);
                ReportPropertyChanging("ModifiedDate");
                _ModifiedDate = value;
                ReportPropertyChanged("ModifiedDate");
                OnModifiedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ModifiedDate;
        partial void OnModifiedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnModifiedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ModifiedBy
        {
            get
            {
                return _ModifiedBy;
            }
            set
            {
                OnModifiedByChanging(value);
                ReportPropertyChanging("ModifiedBy");
                _ModifiedBy = value;
                ReportPropertyChanged("ModifiedBy");
                OnModifiedByChanged();
            }
        }
        private global::System.String _ModifiedBy;
        partial void OnModifiedByChanging(global::System.String value);
        partial void OnModifiedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int16> RoleID
        {
            get
            {
                return _RoleID;
            }
            set
            {
                OnRoleIDChanging(value);
                ReportPropertyChanging("RoleID");
                _RoleID = value;
                ReportPropertyChanged("RoleID");
                OnRoleIDChanged();
            }
        }
        private Nullable<global::System.Int16> _RoleID;
        partial void OnRoleIDChanging(Nullable<global::System.Int16> value);
        partial void OnRoleIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int16> StatusID
        {
            get
            {
                return _StatusID;
            }
            set
            {
                OnStatusIDChanging(value);
                ReportPropertyChanging("StatusID");
                _StatusID = value;
                ReportPropertyChanged("StatusID");
                OnStatusIDChanged();
            }
        }
        private Nullable<global::System.Int16> _StatusID;
        partial void OnStatusIDChanging(Nullable<global::System.Int16> value);
        partial void OnStatusIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] Photo
        {
            get
            {
                return StructuralObject.GetValidValue(_Photo);
            }
            set
            {
                OnPhotoChanging(value);
                ReportPropertyChanging("Photo");
                _Photo = value;
                ReportPropertyChanged("Photo");
                OnPhotoChanged();
            }
        }
        private global::System.Byte[] _Photo;
        partial void OnPhotoChanging(global::System.Byte[] value);
        partial void OnPhotoChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_RESOURCE_REF_ROLE", "REF_ROLE")]
        public REF_ROLE REF_ROLE
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<REF_ROLE>("LightSwitchApplication.FK_RESOURCE_REF_ROLE", "REF_ROLE").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<REF_ROLE>("LightSwitchApplication.FK_RESOURCE_REF_ROLE", "REF_ROLE").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<REF_ROLE> REF_ROLEReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<REF_ROLE>("LightSwitchApplication.FK_RESOURCE_REF_ROLE", "REF_ROLE");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<REF_ROLE>("LightSwitchApplication.FK_RESOURCE_REF_ROLE", "REF_ROLE", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_RESOURCE_REF_STATUS", "REF_STATUS")]
        public REF_STATUS REF_STATUS
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<REF_STATUS>("LightSwitchApplication.FK_RESOURCE_REF_STATUS", "REF_STATUS").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<REF_STATUS>("LightSwitchApplication.FK_RESOURCE_REF_STATUS", "REF_STATUS").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<REF_STATUS> REF_STATUSReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<REF_STATUS>("LightSwitchApplication.FK_RESOURCE_REF_STATUS", "REF_STATUS");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<REF_STATUS>("LightSwitchApplication.FK_RESOURCE_REF_STATUS", "REF_STATUS", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_TP_RESOURCE_ALLOCATION_RESOURCE", "TP_RESOURCE_ALLOCATION")]
        public EntityCollection<TP_RESOURCE_ALLOCATION> TP_RESOURCE_ALLOCATIONs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TP_RESOURCE_ALLOCATION>("LightSwitchApplication.FK_TP_RESOURCE_ALLOCATION_RESOURCE", "TP_RESOURCE_ALLOCATION");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TP_RESOURCE_ALLOCATION>("LightSwitchApplication.FK_TP_RESOURCE_ALLOCATION_RESOURCE", "TP_RESOURCE_ALLOCATION", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LightSwitchApplication", Name="TP")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TP : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TP object.
        /// </summary>
        /// <param name="tpID">Initial value of the TpID property.</param>
        /// <param name="number">Initial value of the Number property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="plannedStartDate">Initial value of the PlannedStartDate property.</param>
        /// <param name="hasInputDocument">Initial value of the HasInputDocument property.</param>
        /// <param name="hasFeasibilityStudy">Initial value of the HasFeasibilityStudy property.</param>
        /// <param name="hasUnderstandingDocument">Initial value of the HasUnderstandingDocument property.</param>
        /// <param name="hasEstimation">Initial value of the HasEstimation property.</param>
        public static TP CreateTP(global::System.Int32 tpID, global::System.Int32 number, global::System.String name, global::System.DateTime plannedStartDate, global::System.Boolean hasInputDocument, global::System.Boolean hasFeasibilityStudy, global::System.Boolean hasUnderstandingDocument, global::System.Boolean hasEstimation)
        {
            TP tP = new TP();
            tP.TpID = tpID;
            tP.Number = number;
            tP.Name = name;
            tP.PlannedStartDate = plannedStartDate;
            tP.HasInputDocument = hasInputDocument;
            tP.HasFeasibilityStudy = hasFeasibilityStudy;
            tP.HasUnderstandingDocument = hasUnderstandingDocument;
            tP.HasEstimation = hasEstimation;
            return tP;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TpID
        {
            get
            {
                return _TpID;
            }
            set
            {
                if (_TpID != value)
                {
                    OnTpIDChanging(value);
                    ReportPropertyChanging("TpID");
                    _TpID = value;
                    ReportPropertyChanged("TpID");
                    OnTpIDChanged();
                }
            }
        }
        private global::System.Int32 _TpID;
        partial void OnTpIDChanging(global::System.Int32 value);
        partial void OnTpIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Number
        {
            get
            {
                return _Number;
            }
            set
            {
                OnNumberChanging(value);
                ReportPropertyChanging("Number");
                _Number = value;
                ReportPropertyChanged("Number");
                OnNumberChanged();
            }
        }
        private global::System.Int32 _Number;
        partial void OnNumberChanging(global::System.Int32 value);
        partial void OnNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = value;
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = value;
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String WorkOrderNumber
        {
            get
            {
                return _WorkOrderNumber;
            }
            set
            {
                OnWorkOrderNumberChanging(value);
                ReportPropertyChanging("WorkOrderNumber");
                _WorkOrderNumber = value;
                ReportPropertyChanged("WorkOrderNumber");
                OnWorkOrderNumberChanged();
            }
        }
        private global::System.String _WorkOrderNumber;
        partial void OnWorkOrderNumberChanging(global::System.String value);
        partial void OnWorkOrderNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int16> WorkOrderStatus
        {
            get
            {
                return _WorkOrderStatus;
            }
            set
            {
                OnWorkOrderStatusChanging(value);
                ReportPropertyChanging("WorkOrderStatus");
                _WorkOrderStatus = value;
                ReportPropertyChanged("WorkOrderStatus");
                OnWorkOrderStatusChanged();
            }
        }
        private Nullable<global::System.Int16> _WorkOrderStatus;
        partial void OnWorkOrderStatusChanging(Nullable<global::System.Int16> value);
        partial void OnWorkOrderStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> WorkOrderIssuedOn
        {
            get
            {
                return _WorkOrderIssuedOn;
            }
            set
            {
                OnWorkOrderIssuedOnChanging(value);
                ReportPropertyChanging("WorkOrderIssuedOn");
                _WorkOrderIssuedOn = value;
                ReportPropertyChanged("WorkOrderIssuedOn");
                OnWorkOrderIssuedOnChanged();
            }
        }
        private Nullable<global::System.DateTime> _WorkOrderIssuedOn;
        partial void OnWorkOrderIssuedOnChanging(Nullable<global::System.DateTime> value);
        partial void OnWorkOrderIssuedOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PlannedEffort
        {
            get
            {
                return _PlannedEffort;
            }
            set
            {
                OnPlannedEffortChanging(value);
                ReportPropertyChanging("PlannedEffort");
                _PlannedEffort = value;
                ReportPropertyChanged("PlannedEffort");
                OnPlannedEffortChanged();
            }
        }
        private global::System.String _PlannedEffort;
        partial void OnPlannedEffortChanging(global::System.String value);
        partial void OnPlannedEffortChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> EstimatedCost
        {
            get
            {
                return _EstimatedCost;
            }
            set
            {
                OnEstimatedCostChanging(value);
                ReportPropertyChanging("EstimatedCost");
                _EstimatedCost = value;
                ReportPropertyChanged("EstimatedCost");
                OnEstimatedCostChanged();
            }
        }
        private Nullable<global::System.Decimal> _EstimatedCost;
        partial void OnEstimatedCostChanging(Nullable<global::System.Decimal> value);
        partial void OnEstimatedCostChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> IssueDateToHP
        {
            get
            {
                return _IssueDateToHP;
            }
            set
            {
                OnIssueDateToHPChanging(value);
                ReportPropertyChanging("IssueDateToHP");
                _IssueDateToHP = value;
                ReportPropertyChanged("IssueDateToHP");
                OnIssueDateToHPChanged();
            }
        }
        private Nullable<global::System.DateTime> _IssueDateToHP;
        partial void OnIssueDateToHPChanging(Nullable<global::System.DateTime> value);
        partial void OnIssueDateToHPChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> EffortDateProvidedByHP
        {
            get
            {
                return _EffortDateProvidedByHP;
            }
            set
            {
                OnEffortDateProvidedByHPChanging(value);
                ReportPropertyChanging("EffortDateProvidedByHP");
                _EffortDateProvidedByHP = value;
                ReportPropertyChanged("EffortDateProvidedByHP");
                OnEffortDateProvidedByHPChanged();
            }
        }
        private Nullable<global::System.DateTime> _EffortDateProvidedByHP;
        partial void OnEffortDateProvidedByHPChanging(Nullable<global::System.DateTime> value);
        partial void OnEffortDateProvidedByHPChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ApprovedDateByDL
        {
            get
            {
                return _ApprovedDateByDL;
            }
            set
            {
                OnApprovedDateByDLChanging(value);
                ReportPropertyChanging("ApprovedDateByDL");
                _ApprovedDateByDL = value;
                ReportPropertyChanged("ApprovedDateByDL");
                OnApprovedDateByDLChanged();
            }
        }
        private Nullable<global::System.DateTime> _ApprovedDateByDL;
        partial void OnApprovedDateByDLChanging(Nullable<global::System.DateTime> value);
        partial void OnApprovedDateByDLChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime PlannedStartDate
        {
            get
            {
                return _PlannedStartDate;
            }
            set
            {
                OnPlannedStartDateChanging(value);
                ReportPropertyChanging("PlannedStartDate");
                _PlannedStartDate = value;
                ReportPropertyChanged("PlannedStartDate");
                OnPlannedStartDateChanged();
            }
        }
        private global::System.DateTime _PlannedStartDate;
        partial void OnPlannedStartDateChanging(global::System.DateTime value);
        partial void OnPlannedStartDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> PlannedEndDate
        {
            get
            {
                return _PlannedEndDate;
            }
            set
            {
                OnPlannedEndDateChanging(value);
                ReportPropertyChanging("PlannedEndDate");
                _PlannedEndDate = value;
                ReportPropertyChanged("PlannedEndDate");
                OnPlannedEndDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _PlannedEndDate;
        partial void OnPlannedEndDateChanging(Nullable<global::System.DateTime> value);
        partial void OnPlannedEndDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ActualStartDate
        {
            get
            {
                return _ActualStartDate;
            }
            set
            {
                OnActualStartDateChanging(value);
                ReportPropertyChanging("ActualStartDate");
                _ActualStartDate = value;
                ReportPropertyChanged("ActualStartDate");
                OnActualStartDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ActualStartDate;
        partial void OnActualStartDateChanging(Nullable<global::System.DateTime> value);
        partial void OnActualStartDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ActualEndDate
        {
            get
            {
                return _ActualEndDate;
            }
            set
            {
                OnActualEndDateChanging(value);
                ReportPropertyChanging("ActualEndDate");
                _ActualEndDate = value;
                ReportPropertyChanged("ActualEndDate");
                OnActualEndDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ActualEndDate;
        partial void OnActualEndDateChanging(Nullable<global::System.DateTime> value);
        partial void OnActualEndDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ApplicationSize
        {
            get
            {
                return _ApplicationSize;
            }
            set
            {
                OnApplicationSizeChanging(value);
                ReportPropertyChanging("ApplicationSize");
                _ApplicationSize = value;
                ReportPropertyChanged("ApplicationSize");
                OnApplicationSizeChanged();
            }
        }
        private global::System.String _ApplicationSize;
        partial void OnApplicationSizeChanging(global::System.String value);
        partial void OnApplicationSizeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean HasInputDocument
        {
            get
            {
                return _HasInputDocument;
            }
            set
            {
                OnHasInputDocumentChanging(value);
                ReportPropertyChanging("HasInputDocument");
                _HasInputDocument = value;
                ReportPropertyChanged("HasInputDocument");
                OnHasInputDocumentChanged();
            }
        }
        private global::System.Boolean _HasInputDocument;
        partial void OnHasInputDocumentChanging(global::System.Boolean value);
        partial void OnHasInputDocumentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean HasFeasibilityStudy
        {
            get
            {
                return _HasFeasibilityStudy;
            }
            set
            {
                OnHasFeasibilityStudyChanging(value);
                ReportPropertyChanging("HasFeasibilityStudy");
                _HasFeasibilityStudy = value;
                ReportPropertyChanged("HasFeasibilityStudy");
                OnHasFeasibilityStudyChanged();
            }
        }
        private global::System.Boolean _HasFeasibilityStudy;
        partial void OnHasFeasibilityStudyChanging(global::System.Boolean value);
        partial void OnHasFeasibilityStudyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean HasUnderstandingDocument
        {
            get
            {
                return _HasUnderstandingDocument;
            }
            set
            {
                OnHasUnderstandingDocumentChanging(value);
                ReportPropertyChanging("HasUnderstandingDocument");
                _HasUnderstandingDocument = value;
                ReportPropertyChanged("HasUnderstandingDocument");
                OnHasUnderstandingDocumentChanged();
            }
        }
        private global::System.Boolean _HasUnderstandingDocument;
        partial void OnHasUnderstandingDocumentChanging(global::System.Boolean value);
        partial void OnHasUnderstandingDocumentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean HasEstimation
        {
            get
            {
                return _HasEstimation;
            }
            set
            {
                OnHasEstimationChanging(value);
                ReportPropertyChanging("HasEstimation");
                _HasEstimation = value;
                ReportPropertyChanged("HasEstimation");
                OnHasEstimationChanged();
            }
        }
        private global::System.Boolean _HasEstimation;
        partial void OnHasEstimationChanging(global::System.Boolean value);
        partial void OnHasEstimationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = value;
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedDate;
        partial void OnCreatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = value;
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private global::System.String _CreatedBy;
        partial void OnCreatedByChanging(global::System.String value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ModifiedDate
        {
            get
            {
                return _ModifiedDate;
            }
            set
            {
                OnModifiedDateChanging(value);
                ReportPropertyChanging("ModifiedDate");
                _ModifiedDate = value;
                ReportPropertyChanged("ModifiedDate");
                OnModifiedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ModifiedDate;
        partial void OnModifiedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnModifiedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ModifiedBy
        {
            get
            {
                return _ModifiedBy;
            }
            set
            {
                OnModifiedByChanging(value);
                ReportPropertyChanging("ModifiedBy");
                _ModifiedBy = value;
                ReportPropertyChanged("ModifiedBy");
                OnModifiedByChanged();
            }
        }
        private global::System.String _ModifiedBy;
        partial void OnModifiedByChanging(global::System.String value);
        partial void OnModifiedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int16> ApplicationTypeID
        {
            get
            {
                return _ApplicationTypeID;
            }
            set
            {
                OnApplicationTypeIDChanging(value);
                ReportPropertyChanging("ApplicationTypeID");
                _ApplicationTypeID = value;
                ReportPropertyChanged("ApplicationTypeID");
                OnApplicationTypeIDChanged();
            }
        }
        private Nullable<global::System.Int16> _ApplicationTypeID;
        partial void OnApplicationTypeIDChanging(Nullable<global::System.Int16> value);
        partial void OnApplicationTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int16> TechnicalComplexityID
        {
            get
            {
                return _TechnicalComplexityID;
            }
            set
            {
                OnTechnicalComplexityIDChanging(value);
                ReportPropertyChanging("TechnicalComplexityID");
                _TechnicalComplexityID = value;
                ReportPropertyChanged("TechnicalComplexityID");
                OnTechnicalComplexityIDChanged();
            }
        }
        private Nullable<global::System.Int16> _TechnicalComplexityID;
        partial void OnTechnicalComplexityIDChanging(Nullable<global::System.Int16> value);
        partial void OnTechnicalComplexityIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int16> ForcedComplexityID
        {
            get
            {
                return _ForcedComplexityID;
            }
            set
            {
                OnForcedComplexityIDChanging(value);
                ReportPropertyChanging("ForcedComplexityID");
                _ForcedComplexityID = value;
                ReportPropertyChanged("ForcedComplexityID");
                OnForcedComplexityIDChanged();
            }
        }
        private Nullable<global::System.Int16> _ForcedComplexityID;
        partial void OnForcedComplexityIDChanging(Nullable<global::System.Int16> value);
        partial void OnForcedComplexityIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int16> TechnologyGapID
        {
            get
            {
                return _TechnologyGapID;
            }
            set
            {
                OnTechnologyGapIDChanging(value);
                ReportPropertyChanging("TechnologyGapID");
                _TechnologyGapID = value;
                ReportPropertyChanged("TechnologyGapID");
                OnTechnologyGapIDChanged();
            }
        }
        private Nullable<global::System.Int16> _TechnologyGapID;
        partial void OnTechnologyGapIDChanging(Nullable<global::System.Int16> value);
        partial void OnTechnologyGapIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int16> FunctionalGapID
        {
            get
            {
                return _FunctionalGapID;
            }
            set
            {
                OnFunctionalGapIDChanging(value);
                ReportPropertyChanging("FunctionalGapID");
                _FunctionalGapID = value;
                ReportPropertyChanged("FunctionalGapID");
                OnFunctionalGapIDChanged();
            }
        }
        private Nullable<global::System.Int16> _FunctionalGapID;
        partial void OnFunctionalGapIDChanging(Nullable<global::System.Int16> value);
        partial void OnFunctionalGapIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int16> TechnologyStackID
        {
            get
            {
                return _TechnologyStackID;
            }
            set
            {
                OnTechnologyStackIDChanging(value);
                ReportPropertyChanging("TechnologyStackID");
                _TechnologyStackID = value;
                ReportPropertyChanged("TechnologyStackID");
                OnTechnologyStackIDChanged();
            }
        }
        private Nullable<global::System.Int16> _TechnologyStackID;
        partial void OnTechnologyStackIDChanging(Nullable<global::System.Int16> value);
        partial void OnTechnologyStackIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_TP_APPLICATION_TP_APPLICATION", "TP_APPLICATION")]
        public EntityCollection<TP_APPLICATION> TP_APPLICATIONs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TP_APPLICATION>("LightSwitchApplication.FK_TP_APPLICATION_TP_APPLICATION", "TP_APPLICATION");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TP_APPLICATION>("LightSwitchApplication.FK_TP_APPLICATION_TP_APPLICATION", "TP_APPLICATION", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_TP_DOCUMENT_LINK_TP", "TP_DOCUMENT_LINK")]
        public EntityCollection<TP_DOCUMENT_LINK> TP_DOCUMENT_LINKs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TP_DOCUMENT_LINK>("LightSwitchApplication.FK_TP_DOCUMENT_LINK_TP", "TP_DOCUMENT_LINK");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TP_DOCUMENT_LINK>("LightSwitchApplication.FK_TP_DOCUMENT_LINK_TP", "TP_DOCUMENT_LINK", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_TP_PHASE_TP", "TP_PHASE")]
        public EntityCollection<TP_PHASE> TP_PHASEs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TP_PHASE>("LightSwitchApplication.FK_TP_PHASE_TP", "TP_PHASE");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TP_PHASE>("LightSwitchApplication.FK_TP_PHASE_TP", "TP_PHASE", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_TP_REF_APPLICATION_TYPE", "REF_APPLICATION_TYPE")]
        public REF_APPLICATION_TYPE REF_APPLICATION_TYPE
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<REF_APPLICATION_TYPE>("LightSwitchApplication.FK_TP_REF_APPLICATION_TYPE", "REF_APPLICATION_TYPE").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<REF_APPLICATION_TYPE>("LightSwitchApplication.FK_TP_REF_APPLICATION_TYPE", "REF_APPLICATION_TYPE").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<REF_APPLICATION_TYPE> REF_APPLICATION_TYPEReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<REF_APPLICATION_TYPE>("LightSwitchApplication.FK_TP_REF_APPLICATION_TYPE", "REF_APPLICATION_TYPE");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<REF_APPLICATION_TYPE>("LightSwitchApplication.FK_TP_REF_APPLICATION_TYPE", "REF_APPLICATION_TYPE", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_TP_REF_COMPLEXITY", "REF_COMPLEXITY")]
        public REF_COMPLEXITY REF_COMPLEXITY
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<REF_COMPLEXITY>("LightSwitchApplication.FK_TP_REF_COMPLEXITY", "REF_COMPLEXITY").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<REF_COMPLEXITY>("LightSwitchApplication.FK_TP_REF_COMPLEXITY", "REF_COMPLEXITY").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<REF_COMPLEXITY> REF_COMPLEXITYReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<REF_COMPLEXITY>("LightSwitchApplication.FK_TP_REF_COMPLEXITY", "REF_COMPLEXITY");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<REF_COMPLEXITY>("LightSwitchApplication.FK_TP_REF_COMPLEXITY", "REF_COMPLEXITY", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_TP_REF_COMPLEXITY1", "REF_COMPLEXITY")]
        public REF_COMPLEXITY REF_COMPLEXITY1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<REF_COMPLEXITY>("LightSwitchApplication.FK_TP_REF_COMPLEXITY1", "REF_COMPLEXITY").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<REF_COMPLEXITY>("LightSwitchApplication.FK_TP_REF_COMPLEXITY1", "REF_COMPLEXITY").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<REF_COMPLEXITY> REF_COMPLEXITY1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<REF_COMPLEXITY>("LightSwitchApplication.FK_TP_REF_COMPLEXITY1", "REF_COMPLEXITY");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<REF_COMPLEXITY>("LightSwitchApplication.FK_TP_REF_COMPLEXITY1", "REF_COMPLEXITY", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_TP_REF_GAP", "REF_GAP")]
        public REF_GAP REF_GAP
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<REF_GAP>("LightSwitchApplication.FK_TP_REF_GAP", "REF_GAP").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<REF_GAP>("LightSwitchApplication.FK_TP_REF_GAP", "REF_GAP").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<REF_GAP> REF_GAPReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<REF_GAP>("LightSwitchApplication.FK_TP_REF_GAP", "REF_GAP");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<REF_GAP>("LightSwitchApplication.FK_TP_REF_GAP", "REF_GAP", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_TP_REF_GAP1", "REF_GAP")]
        public REF_GAP REF_GAP1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<REF_GAP>("LightSwitchApplication.FK_TP_REF_GAP1", "REF_GAP").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<REF_GAP>("LightSwitchApplication.FK_TP_REF_GAP1", "REF_GAP").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<REF_GAP> REF_GAP1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<REF_GAP>("LightSwitchApplication.FK_TP_REF_GAP1", "REF_GAP");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<REF_GAP>("LightSwitchApplication.FK_TP_REF_GAP1", "REF_GAP", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_TP_REF_TECHNOLOGY_STACK", "REF_TECHNOLOGY_STACK")]
        public REF_TECHNOLOGY_STACK REF_TECHNOLOGY_STACK
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<REF_TECHNOLOGY_STACK>("LightSwitchApplication.FK_TP_REF_TECHNOLOGY_STACK", "REF_TECHNOLOGY_STACK").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<REF_TECHNOLOGY_STACK>("LightSwitchApplication.FK_TP_REF_TECHNOLOGY_STACK", "REF_TECHNOLOGY_STACK").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<REF_TECHNOLOGY_STACK> REF_TECHNOLOGY_STACKReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<REF_TECHNOLOGY_STACK>("LightSwitchApplication.FK_TP_REF_TECHNOLOGY_STACK", "REF_TECHNOLOGY_STACK");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<REF_TECHNOLOGY_STACK>("LightSwitchApplication.FK_TP_REF_TECHNOLOGY_STACK", "REF_TECHNOLOGY_STACK", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_TP_RESOURCE_TP", "TP_RESOURCE_ALLOCATION")]
        public EntityCollection<TP_RESOURCE_ALLOCATION> TP_RESOURCE_ALLOCATIONs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TP_RESOURCE_ALLOCATION>("LightSwitchApplication.FK_TP_RESOURCE_TP", "TP_RESOURCE_ALLOCATION");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TP_RESOURCE_ALLOCATION>("LightSwitchApplication.FK_TP_RESOURCE_TP", "TP_RESOURCE_ALLOCATION", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_TP_STAKEHOLDER_TP", "TP_STAKEHOLDER")]
        public EntityCollection<TP_STAKEHOLDER> TP_STAKEHOLDERs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TP_STAKEHOLDER>("LightSwitchApplication.FK_TP_STAKEHOLDER_TP", "TP_STAKEHOLDER");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TP_STAKEHOLDER>("LightSwitchApplication.FK_TP_STAKEHOLDER_TP", "TP_STAKEHOLDER", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_TP_VENDOR_TP", "TP_VENDOR")]
        public EntityCollection<TP_VENDOR> TP_VENDORs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TP_VENDOR>("LightSwitchApplication.FK_TP_VENDOR_TP", "TP_VENDOR");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TP_VENDOR>("LightSwitchApplication.FK_TP_VENDOR_TP", "TP_VENDOR", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LightSwitchApplication", Name="TP_APPLICATION")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TP_APPLICATION : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TP_APPLICATION object.
        /// </summary>
        /// <param name="tpApplicationID">Initial value of the TpApplicationID property.</param>
        public static TP_APPLICATION CreateTP_APPLICATION(global::System.Int32 tpApplicationID)
        {
            TP_APPLICATION tP_APPLICATION = new TP_APPLICATION();
            tP_APPLICATION.TpApplicationID = tpApplicationID;
            return tP_APPLICATION;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TpApplicationID
        {
            get
            {
                return _TpApplicationID;
            }
            set
            {
                if (_TpApplicationID != value)
                {
                    OnTpApplicationIDChanging(value);
                    ReportPropertyChanging("TpApplicationID");
                    _TpApplicationID = value;
                    ReportPropertyChanged("TpApplicationID");
                    OnTpApplicationIDChanged();
                }
            }
        }
        private global::System.Int32 _TpApplicationID;
        partial void OnTpApplicationIDChanging(global::System.Int32 value);
        partial void OnTpApplicationIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = value;
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private global::System.String _CreatedBy;
        partial void OnCreatedByChanging(global::System.String value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = value;
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedDate;
        partial void OnCreatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ModifiedBy
        {
            get
            {
                return _ModifiedBy;
            }
            set
            {
                OnModifiedByChanging(value);
                ReportPropertyChanging("ModifiedBy");
                _ModifiedBy = value;
                ReportPropertyChanged("ModifiedBy");
                OnModifiedByChanged();
            }
        }
        private global::System.String _ModifiedBy;
        partial void OnModifiedByChanging(global::System.String value);
        partial void OnModifiedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ModifiedDate
        {
            get
            {
                return _ModifiedDate;
            }
            set
            {
                OnModifiedDateChanging(value);
                ReportPropertyChanging("ModifiedDate");
                _ModifiedDate = value;
                ReportPropertyChanged("ModifiedDate");
                OnModifiedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ModifiedDate;
        partial void OnModifiedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnModifiedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int16> ApplicationID
        {
            get
            {
                return _ApplicationID;
            }
            set
            {
                OnApplicationIDChanging(value);
                ReportPropertyChanging("ApplicationID");
                _ApplicationID = value;
                ReportPropertyChanged("ApplicationID");
                OnApplicationIDChanged();
            }
        }
        private Nullable<global::System.Int16> _ApplicationID;
        partial void OnApplicationIDChanging(Nullable<global::System.Int16> value);
        partial void OnApplicationIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TpID
        {
            get
            {
                return _TpID;
            }
            set
            {
                OnTpIDChanging(value);
                ReportPropertyChanging("TpID");
                _TpID = value;
                ReportPropertyChanged("TpID");
                OnTpIDChanged();
            }
        }
        private Nullable<global::System.Int32> _TpID;
        partial void OnTpIDChanging(Nullable<global::System.Int32> value);
        partial void OnTpIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "APP_TP_APPLICATION", "APP")]
        public APP APP
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<APP>("LightSwitchApplication.APP_TP_APPLICATION", "APP").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<APP>("LightSwitchApplication.APP_TP_APPLICATION", "APP").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<APP> APPReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<APP>("LightSwitchApplication.APP_TP_APPLICATION", "APP");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<APP>("LightSwitchApplication.APP_TP_APPLICATION", "APP", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_TP_APPLICATION_TP_APPLICATION", "TP")]
        public TP TP
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TP>("LightSwitchApplication.FK_TP_APPLICATION_TP_APPLICATION", "TP").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TP>("LightSwitchApplication.FK_TP_APPLICATION_TP_APPLICATION", "TP").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<TP> TPReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TP>("LightSwitchApplication.FK_TP_APPLICATION_TP_APPLICATION", "TP");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<TP>("LightSwitchApplication.FK_TP_APPLICATION_TP_APPLICATION", "TP", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LightSwitchApplication", Name="TP_DOCUMENT_LINK")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TP_DOCUMENT_LINK : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TP_DOCUMENT_LINK object.
        /// </summary>
        /// <param name="tpDocumentLinkID">Initial value of the TpDocumentLinkID property.</param>
        /// <param name="documentTypeID">Initial value of the DocumentTypeID property.</param>
        public static TP_DOCUMENT_LINK CreateTP_DOCUMENT_LINK(global::System.Int32 tpDocumentLinkID, global::System.Int16 documentTypeID)
        {
            TP_DOCUMENT_LINK tP_DOCUMENT_LINK = new TP_DOCUMENT_LINK();
            tP_DOCUMENT_LINK.TpDocumentLinkID = tpDocumentLinkID;
            tP_DOCUMENT_LINK.DocumentTypeID = documentTypeID;
            return tP_DOCUMENT_LINK;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TpDocumentLinkID
        {
            get
            {
                return _TpDocumentLinkID;
            }
            set
            {
                if (_TpDocumentLinkID != value)
                {
                    OnTpDocumentLinkIDChanging(value);
                    ReportPropertyChanging("TpDocumentLinkID");
                    _TpDocumentLinkID = value;
                    ReportPropertyChanged("TpDocumentLinkID");
                    OnTpDocumentLinkIDChanged();
                }
            }
        }
        private global::System.Int32 _TpDocumentLinkID;
        partial void OnTpDocumentLinkIDChanging(global::System.Int32 value);
        partial void OnTpDocumentLinkIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = value;
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = value;
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = value;
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private global::System.String _CreatedBy;
        partial void OnCreatedByChanging(global::System.String value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = value;
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedDate;
        partial void OnCreatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Link
        {
            get
            {
                return _Link;
            }
            set
            {
                OnLinkChanging(value);
                ReportPropertyChanging("Link");
                _Link = value;
                ReportPropertyChanged("Link");
                OnLinkChanged();
            }
        }
        private global::System.String _Link;
        partial void OnLinkChanging(global::System.String value);
        partial void OnLinkChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ModifiedBy
        {
            get
            {
                return _ModifiedBy;
            }
            set
            {
                OnModifiedByChanging(value);
                ReportPropertyChanging("ModifiedBy");
                _ModifiedBy = value;
                ReportPropertyChanged("ModifiedBy");
                OnModifiedByChanged();
            }
        }
        private global::System.String _ModifiedBy;
        partial void OnModifiedByChanging(global::System.String value);
        partial void OnModifiedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ModifiedDate
        {
            get
            {
                return _ModifiedDate;
            }
            set
            {
                OnModifiedDateChanging(value);
                ReportPropertyChanging("ModifiedDate");
                _ModifiedDate = value;
                ReportPropertyChanged("ModifiedDate");
                OnModifiedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ModifiedDate;
        partial void OnModifiedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnModifiedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 DocumentTypeID
        {
            get
            {
                return _DocumentTypeID;
            }
            set
            {
                OnDocumentTypeIDChanging(value);
                ReportPropertyChanging("DocumentTypeID");
                _DocumentTypeID = value;
                ReportPropertyChanged("DocumentTypeID");
                OnDocumentTypeIDChanged();
            }
        }
        private global::System.Int16 _DocumentTypeID;
        partial void OnDocumentTypeIDChanging(global::System.Int16 value);
        partial void OnDocumentTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TpID
        {
            get
            {
                return _TpID;
            }
            set
            {
                OnTpIDChanging(value);
                ReportPropertyChanging("TpID");
                _TpID = value;
                ReportPropertyChanged("TpID");
                OnTpIDChanged();
            }
        }
        private Nullable<global::System.Int32> _TpID;
        partial void OnTpIDChanging(Nullable<global::System.Int32> value);
        partial void OnTpIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_TP_DOCUMENT_LINK_REF_DOCUMENT_TYPE", "REF_DOCUMENT_TYPE")]
        public REF_DOCUMENT_TYPE REF_DOCUMENT_TYPE
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<REF_DOCUMENT_TYPE>("LightSwitchApplication.FK_TP_DOCUMENT_LINK_REF_DOCUMENT_TYPE", "REF_DOCUMENT_TYPE").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<REF_DOCUMENT_TYPE>("LightSwitchApplication.FK_TP_DOCUMENT_LINK_REF_DOCUMENT_TYPE", "REF_DOCUMENT_TYPE").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<REF_DOCUMENT_TYPE> REF_DOCUMENT_TYPEReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<REF_DOCUMENT_TYPE>("LightSwitchApplication.FK_TP_DOCUMENT_LINK_REF_DOCUMENT_TYPE", "REF_DOCUMENT_TYPE");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<REF_DOCUMENT_TYPE>("LightSwitchApplication.FK_TP_DOCUMENT_LINK_REF_DOCUMENT_TYPE", "REF_DOCUMENT_TYPE", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_TP_DOCUMENT_LINK_TP", "TP")]
        public TP TP
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TP>("LightSwitchApplication.FK_TP_DOCUMENT_LINK_TP", "TP").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TP>("LightSwitchApplication.FK_TP_DOCUMENT_LINK_TP", "TP").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<TP> TPReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TP>("LightSwitchApplication.FK_TP_DOCUMENT_LINK_TP", "TP");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<TP>("LightSwitchApplication.FK_TP_DOCUMENT_LINK_TP", "TP", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LightSwitchApplication", Name="TP_PHASE")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TP_PHASE : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TP_PHASE object.
        /// </summary>
        /// <param name="tpPhaseID">Initial value of the TpPhaseID property.</param>
        /// <param name="plannedStartDate">Initial value of the PlannedStartDate property.</param>
        public static TP_PHASE CreateTP_PHASE(global::System.Int32 tpPhaseID, global::System.DateTime plannedStartDate)
        {
            TP_PHASE tP_PHASE = new TP_PHASE();
            tP_PHASE.TpPhaseID = tpPhaseID;
            tP_PHASE.PlannedStartDate = plannedStartDate;
            return tP_PHASE;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TpPhaseID
        {
            get
            {
                return _TpPhaseID;
            }
            set
            {
                if (_TpPhaseID != value)
                {
                    OnTpPhaseIDChanging(value);
                    ReportPropertyChanging("TpPhaseID");
                    _TpPhaseID = value;
                    ReportPropertyChanged("TpPhaseID");
                    OnTpPhaseIDChanged();
                }
            }
        }
        private global::System.Int32 _TpPhaseID;
        partial void OnTpPhaseIDChanging(global::System.Int32 value);
        partial void OnTpPhaseIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime PlannedStartDate
        {
            get
            {
                return _PlannedStartDate;
            }
            set
            {
                OnPlannedStartDateChanging(value);
                ReportPropertyChanging("PlannedStartDate");
                _PlannedStartDate = value;
                ReportPropertyChanged("PlannedStartDate");
                OnPlannedStartDateChanged();
            }
        }
        private global::System.DateTime _PlannedStartDate;
        partial void OnPlannedStartDateChanging(global::System.DateTime value);
        partial void OnPlannedStartDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> PlannedEndDate
        {
            get
            {
                return _PlannedEndDate;
            }
            set
            {
                OnPlannedEndDateChanging(value);
                ReportPropertyChanging("PlannedEndDate");
                _PlannedEndDate = value;
                ReportPropertyChanged("PlannedEndDate");
                OnPlannedEndDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _PlannedEndDate;
        partial void OnPlannedEndDateChanging(Nullable<global::System.DateTime> value);
        partial void OnPlannedEndDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ActualStartDate
        {
            get
            {
                return _ActualStartDate;
            }
            set
            {
                OnActualStartDateChanging(value);
                ReportPropertyChanging("ActualStartDate");
                _ActualStartDate = value;
                ReportPropertyChanged("ActualStartDate");
                OnActualStartDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ActualStartDate;
        partial void OnActualStartDateChanging(Nullable<global::System.DateTime> value);
        partial void OnActualStartDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ActualEndDate
        {
            get
            {
                return _ActualEndDate;
            }
            set
            {
                OnActualEndDateChanging(value);
                ReportPropertyChanging("ActualEndDate");
                _ActualEndDate = value;
                ReportPropertyChanged("ActualEndDate");
                OnActualEndDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ActualEndDate;
        partial void OnActualEndDateChanging(Nullable<global::System.DateTime> value);
        partial void OnActualEndDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Duration
        {
            get
            {
                return _Duration;
            }
            set
            {
                OnDurationChanging(value);
                ReportPropertyChanging("Duration");
                _Duration = value;
                ReportPropertyChanged("Duration");
                OnDurationChanged();
            }
        }
        private global::System.String _Duration;
        partial void OnDurationChanging(global::System.String value);
        partial void OnDurationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = value;
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedDate;
        partial void OnCreatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = value;
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private global::System.String _CreatedBy;
        partial void OnCreatedByChanging(global::System.String value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ModifiedBy
        {
            get
            {
                return _ModifiedBy;
            }
            set
            {
                OnModifiedByChanging(value);
                ReportPropertyChanging("ModifiedBy");
                _ModifiedBy = value;
                ReportPropertyChanged("ModifiedBy");
                OnModifiedByChanged();
            }
        }
        private global::System.String _ModifiedBy;
        partial void OnModifiedByChanging(global::System.String value);
        partial void OnModifiedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ModifiedDate
        {
            get
            {
                return _ModifiedDate;
            }
            set
            {
                OnModifiedDateChanging(value);
                ReportPropertyChanging("ModifiedDate");
                _ModifiedDate = value;
                ReportPropertyChanged("ModifiedDate");
                OnModifiedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ModifiedDate;
        partial void OnModifiedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnModifiedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TpID
        {
            get
            {
                return _TpID;
            }
            set
            {
                OnTpIDChanging(value);
                ReportPropertyChanging("TpID");
                _TpID = value;
                ReportPropertyChanged("TpID");
                OnTpIDChanged();
            }
        }
        private Nullable<global::System.Int32> _TpID;
        partial void OnTpIDChanging(Nullable<global::System.Int32> value);
        partial void OnTpIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int16> PhaseID
        {
            get
            {
                return _PhaseID;
            }
            set
            {
                OnPhaseIDChanging(value);
                ReportPropertyChanging("PhaseID");
                _PhaseID = value;
                ReportPropertyChanged("PhaseID");
                OnPhaseIDChanged();
            }
        }
        private Nullable<global::System.Int16> _PhaseID;
        partial void OnPhaseIDChanging(Nullable<global::System.Int16> value);
        partial void OnPhaseIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_TP_PHASE_TP", "TP")]
        public TP TP
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TP>("LightSwitchApplication.FK_TP_PHASE_TP", "TP").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TP>("LightSwitchApplication.FK_TP_PHASE_TP", "TP").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<TP> TPReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TP>("LightSwitchApplication.FK_TP_PHASE_TP", "TP");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<TP>("LightSwitchApplication.FK_TP_PHASE_TP", "TP", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_TP_PHASE_TP_PHASE", "REF_PHASE")]
        public REF_PHASE REF_PHASE
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<REF_PHASE>("LightSwitchApplication.FK_TP_PHASE_TP_PHASE", "REF_PHASE").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<REF_PHASE>("LightSwitchApplication.FK_TP_PHASE_TP_PHASE", "REF_PHASE").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<REF_PHASE> REF_PHASEReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<REF_PHASE>("LightSwitchApplication.FK_TP_PHASE_TP_PHASE", "REF_PHASE");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<REF_PHASE>("LightSwitchApplication.FK_TP_PHASE_TP_PHASE", "REF_PHASE", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LightSwitchApplication", Name="TP_RESOURCE_ALLOCATION")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TP_RESOURCE_ALLOCATION : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TP_RESOURCE_ALLOCATION object.
        /// </summary>
        /// <param name="tpResourceAllocationId">Initial value of the TpResourceAllocationId property.</param>
        public static TP_RESOURCE_ALLOCATION CreateTP_RESOURCE_ALLOCATION(global::System.Int32 tpResourceAllocationId)
        {
            TP_RESOURCE_ALLOCATION tP_RESOURCE_ALLOCATION = new TP_RESOURCE_ALLOCATION();
            tP_RESOURCE_ALLOCATION.TpResourceAllocationId = tpResourceAllocationId;
            return tP_RESOURCE_ALLOCATION;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TpResourceAllocationId
        {
            get
            {
                return _TpResourceAllocationId;
            }
            set
            {
                if (_TpResourceAllocationId != value)
                {
                    OnTpResourceAllocationIdChanging(value);
                    ReportPropertyChanging("TpResourceAllocationId");
                    _TpResourceAllocationId = value;
                    ReportPropertyChanged("TpResourceAllocationId");
                    OnTpResourceAllocationIdChanged();
                }
            }
        }
        private global::System.Int32 _TpResourceAllocationId;
        partial void OnTpResourceAllocationIdChanging(global::System.Int32 value);
        partial void OnTpResourceAllocationIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> Percentage
        {
            get
            {
                return _Percentage;
            }
            set
            {
                OnPercentageChanging(value);
                ReportPropertyChanging("Percentage");
                _Percentage = value;
                ReportPropertyChanged("Percentage");
                OnPercentageChanged();
            }
        }
        private Nullable<global::System.Double> _Percentage;
        partial void OnPercentageChanging(Nullable<global::System.Double> value);
        partial void OnPercentageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> PlannedStartDate
        {
            get
            {
                return _PlannedStartDate;
            }
            set
            {
                OnPlannedStartDateChanging(value);
                ReportPropertyChanging("PlannedStartDate");
                _PlannedStartDate = value;
                ReportPropertyChanged("PlannedStartDate");
                OnPlannedStartDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _PlannedStartDate;
        partial void OnPlannedStartDateChanging(Nullable<global::System.DateTime> value);
        partial void OnPlannedStartDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> PlannedEndDate
        {
            get
            {
                return _PlannedEndDate;
            }
            set
            {
                OnPlannedEndDateChanging(value);
                ReportPropertyChanging("PlannedEndDate");
                _PlannedEndDate = value;
                ReportPropertyChanged("PlannedEndDate");
                OnPlannedEndDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _PlannedEndDate;
        partial void OnPlannedEndDateChanging(Nullable<global::System.DateTime> value);
        partial void OnPlannedEndDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = value;
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private global::System.String _CreatedBy;
        partial void OnCreatedByChanging(global::System.String value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = value;
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedDate;
        partial void OnCreatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ModifiedDate
        {
            get
            {
                return _ModifiedDate;
            }
            set
            {
                OnModifiedDateChanging(value);
                ReportPropertyChanging("ModifiedDate");
                _ModifiedDate = value;
                ReportPropertyChanged("ModifiedDate");
                OnModifiedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ModifiedDate;
        partial void OnModifiedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnModifiedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ModifiedBy
        {
            get
            {
                return _ModifiedBy;
            }
            set
            {
                OnModifiedByChanging(value);
                ReportPropertyChanging("ModifiedBy");
                _ModifiedBy = value;
                ReportPropertyChanged("ModifiedBy");
                OnModifiedByChanged();
            }
        }
        private global::System.String _ModifiedBy;
        partial void OnModifiedByChanging(global::System.String value);
        partial void OnModifiedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ResourceID
        {
            get
            {
                return _ResourceID;
            }
            set
            {
                OnResourceIDChanging(value);
                ReportPropertyChanging("ResourceID");
                _ResourceID = value;
                ReportPropertyChanged("ResourceID");
                OnResourceIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ResourceID;
        partial void OnResourceIDChanging(Nullable<global::System.Int32> value);
        partial void OnResourceIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TpID
        {
            get
            {
                return _TpID;
            }
            set
            {
                OnTpIDChanging(value);
                ReportPropertyChanging("TpID");
                _TpID = value;
                ReportPropertyChanged("TpID");
                OnTpIDChanged();
            }
        }
        private Nullable<global::System.Int32> _TpID;
        partial void OnTpIDChanging(Nullable<global::System.Int32> value);
        partial void OnTpIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_TP_RESOURCE_ALLOCATION_RESOURCE", "RESOURCE")]
        public RESOURCE RESOURCE
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RESOURCE>("LightSwitchApplication.FK_TP_RESOURCE_ALLOCATION_RESOURCE", "RESOURCE").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RESOURCE>("LightSwitchApplication.FK_TP_RESOURCE_ALLOCATION_RESOURCE", "RESOURCE").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<RESOURCE> RESOURCEReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RESOURCE>("LightSwitchApplication.FK_TP_RESOURCE_ALLOCATION_RESOURCE", "RESOURCE");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<RESOURCE>("LightSwitchApplication.FK_TP_RESOURCE_ALLOCATION_RESOURCE", "RESOURCE", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_TP_RESOURCE_TP", "TP")]
        public TP TP
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TP>("LightSwitchApplication.FK_TP_RESOURCE_TP", "TP").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TP>("LightSwitchApplication.FK_TP_RESOURCE_TP", "TP").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<TP> TPReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TP>("LightSwitchApplication.FK_TP_RESOURCE_TP", "TP");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<TP>("LightSwitchApplication.FK_TP_RESOURCE_TP", "TP", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LightSwitchApplication", Name="TP_STAKEHOLDER")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TP_STAKEHOLDER : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TP_STAKEHOLDER object.
        /// </summary>
        /// <param name="tpStakeholderID">Initial value of the TpStakeholderID property.</param>
        public static TP_STAKEHOLDER CreateTP_STAKEHOLDER(global::System.Int32 tpStakeholderID)
        {
            TP_STAKEHOLDER tP_STAKEHOLDER = new TP_STAKEHOLDER();
            tP_STAKEHOLDER.TpStakeholderID = tpStakeholderID;
            return tP_STAKEHOLDER;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TpStakeholderID
        {
            get
            {
                return _TpStakeholderID;
            }
            set
            {
                if (_TpStakeholderID != value)
                {
                    OnTpStakeholderIDChanging(value);
                    ReportPropertyChanging("TpStakeholderID");
                    _TpStakeholderID = value;
                    ReportPropertyChanged("TpStakeholderID");
                    OnTpStakeholderIDChanged();
                }
            }
        }
        private global::System.Int32 _TpStakeholderID;
        partial void OnTpStakeholderIDChanging(global::System.Int32 value);
        partial void OnTpStakeholderIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = value;
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private global::System.String _CreatedBy;
        partial void OnCreatedByChanging(global::System.String value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = value;
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedDate;
        partial void OnCreatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ModifiedBy
        {
            get
            {
                return _ModifiedBy;
            }
            set
            {
                OnModifiedByChanging(value);
                ReportPropertyChanging("ModifiedBy");
                _ModifiedBy = value;
                ReportPropertyChanged("ModifiedBy");
                OnModifiedByChanged();
            }
        }
        private global::System.String _ModifiedBy;
        partial void OnModifiedByChanging(global::System.String value);
        partial void OnModifiedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ModifiedDate
        {
            get
            {
                return _ModifiedDate;
            }
            set
            {
                OnModifiedDateChanging(value);
                ReportPropertyChanging("ModifiedDate");
                _ModifiedDate = value;
                ReportPropertyChanged("ModifiedDate");
                OnModifiedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ModifiedDate;
        partial void OnModifiedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnModifiedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int16> StakeholderID
        {
            get
            {
                return _StakeholderID;
            }
            set
            {
                OnStakeholderIDChanging(value);
                ReportPropertyChanging("StakeholderID");
                _StakeholderID = value;
                ReportPropertyChanged("StakeholderID");
                OnStakeholderIDChanged();
            }
        }
        private Nullable<global::System.Int16> _StakeholderID;
        partial void OnStakeholderIDChanging(Nullable<global::System.Int16> value);
        partial void OnStakeholderIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TpID
        {
            get
            {
                return _TpID;
            }
            set
            {
                OnTpIDChanging(value);
                ReportPropertyChanging("TpID");
                _TpID = value;
                ReportPropertyChanged("TpID");
                OnTpIDChanged();
            }
        }
        private Nullable<global::System.Int32> _TpID;
        partial void OnTpIDChanging(Nullable<global::System.Int32> value);
        partial void OnTpIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_TP_STAKEHOLDER_REF_STAKEHOLDER", "REF_STAKEHOLDER")]
        public REF_STAKEHOLDER REF_STAKEHOLDER
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<REF_STAKEHOLDER>("LightSwitchApplication.FK_TP_STAKEHOLDER_REF_STAKEHOLDER", "REF_STAKEHOLDER").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<REF_STAKEHOLDER>("LightSwitchApplication.FK_TP_STAKEHOLDER_REF_STAKEHOLDER", "REF_STAKEHOLDER").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<REF_STAKEHOLDER> REF_STAKEHOLDERReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<REF_STAKEHOLDER>("LightSwitchApplication.FK_TP_STAKEHOLDER_REF_STAKEHOLDER", "REF_STAKEHOLDER");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<REF_STAKEHOLDER>("LightSwitchApplication.FK_TP_STAKEHOLDER_REF_STAKEHOLDER", "REF_STAKEHOLDER", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_TP_STAKEHOLDER_TP", "TP")]
        public TP TP
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TP>("LightSwitchApplication.FK_TP_STAKEHOLDER_TP", "TP").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TP>("LightSwitchApplication.FK_TP_STAKEHOLDER_TP", "TP").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<TP> TPReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TP>("LightSwitchApplication.FK_TP_STAKEHOLDER_TP", "TP");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<TP>("LightSwitchApplication.FK_TP_STAKEHOLDER_TP", "TP", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LightSwitchApplication", Name="TP_VENDOR")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TP_VENDOR : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TP_VENDOR object.
        /// </summary>
        /// <param name="tpVendorID">Initial value of the TpVendorID property.</param>
        public static TP_VENDOR CreateTP_VENDOR(global::System.Int32 tpVendorID)
        {
            TP_VENDOR tP_VENDOR = new TP_VENDOR();
            tP_VENDOR.TpVendorID = tpVendorID;
            return tP_VENDOR;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TpVendorID
        {
            get
            {
                return _TpVendorID;
            }
            set
            {
                if (_TpVendorID != value)
                {
                    OnTpVendorIDChanging(value);
                    ReportPropertyChanging("TpVendorID");
                    _TpVendorID = value;
                    ReportPropertyChanged("TpVendorID");
                    OnTpVendorIDChanged();
                }
            }
        }
        private global::System.Int32 _TpVendorID;
        partial void OnTpVendorIDChanging(global::System.Int32 value);
        partial void OnTpVendorIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = value;
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private global::System.String _CreatedBy;
        partial void OnCreatedByChanging(global::System.String value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = value;
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedDate;
        partial void OnCreatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ModifiedBy
        {
            get
            {
                return _ModifiedBy;
            }
            set
            {
                OnModifiedByChanging(value);
                ReportPropertyChanging("ModifiedBy");
                _ModifiedBy = value;
                ReportPropertyChanged("ModifiedBy");
                OnModifiedByChanged();
            }
        }
        private global::System.String _ModifiedBy;
        partial void OnModifiedByChanging(global::System.String value);
        partial void OnModifiedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ModifiedDate
        {
            get
            {
                return _ModifiedDate;
            }
            set
            {
                OnModifiedDateChanging(value);
                ReportPropertyChanging("ModifiedDate");
                _ModifiedDate = value;
                ReportPropertyChanged("ModifiedDate");
                OnModifiedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ModifiedDate;
        partial void OnModifiedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnModifiedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int16> VendorID
        {
            get
            {
                return _VendorID;
            }
            set
            {
                OnVendorIDChanging(value);
                ReportPropertyChanging("VendorID");
                _VendorID = value;
                ReportPropertyChanged("VendorID");
                OnVendorIDChanged();
            }
        }
        private Nullable<global::System.Int16> _VendorID;
        partial void OnVendorIDChanging(Nullable<global::System.Int16> value);
        partial void OnVendorIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TpID
        {
            get
            {
                return _TpID;
            }
            set
            {
                OnTpIDChanging(value);
                ReportPropertyChanging("TpID");
                _TpID = value;
                ReportPropertyChanged("TpID");
                OnTpIDChanged();
            }
        }
        private Nullable<global::System.Int32> _TpID;
        partial void OnTpIDChanging(Nullable<global::System.Int32> value);
        partial void OnTpIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_TP_VENDOR_REF_VENDOR", "REF_VENDOR")]
        public REF_VENDOR REF_VENDOR
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<REF_VENDOR>("LightSwitchApplication.FK_TP_VENDOR_REF_VENDOR", "REF_VENDOR").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<REF_VENDOR>("LightSwitchApplication.FK_TP_VENDOR_REF_VENDOR", "REF_VENDOR").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<REF_VENDOR> REF_VENDORReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<REF_VENDOR>("LightSwitchApplication.FK_TP_VENDOR_REF_VENDOR", "REF_VENDOR");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<REF_VENDOR>("LightSwitchApplication.FK_TP_VENDOR_REF_VENDOR", "REF_VENDOR", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_TP_VENDOR_TP", "TP")]
        public TP TP
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TP>("LightSwitchApplication.FK_TP_VENDOR_TP", "TP").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TP>("LightSwitchApplication.FK_TP_VENDOR_TP", "TP").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<TP> TPReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TP>("LightSwitchApplication.FK_TP_VENDOR_TP", "TP");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<TP>("LightSwitchApplication.FK_TP_VENDOR_TP", "TP", value);
                }
            }
        }

        #endregion

    }

    #endregion

    
}
